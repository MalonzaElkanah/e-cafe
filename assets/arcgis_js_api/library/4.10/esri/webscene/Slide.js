// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.10/esri/copyright.txt for details.
//>>built
define("require exports ../core/tsSupport/assignHelper ../core/tsSupport/declareExtendsHelper ../core/tsSupport/decorateHelper ../Basemap ../Viewpoint ../core/Collection ../core/collectionUtils ../core/JSONSupport ../core/lang ../core/Logger ../core/promiseUtils ../core/accessorSupport/decorators ../core/accessorSupport/ensureType ../core/libs/gl-matrix-2/gl-matrix ../layers/Layer ../support/basemapUtils ../webdoc/support/Thumbnail ./Environment ./Lighting ./support/Description ./support/SlideGround ./support/Title".split(" "),
function(K,L,r,t,d,B,C,u,D,h,E,F,k,c,n,p,G,v,f,w,H,l,x,g){function y(c){if("building-scene"===c.type||"map-image"===c.type)return c.allSublayers}function z(c){if(c=y(c))return c.filter(function(b){return b.visible}).map(function(b){return b.id}).toArray()}var I=0,A=function(f){function b(a){a=f.call(this)||this;a.id="";a.sublayerIds=null;return a}t(b,f);a=b;b.prototype.clone=function(){return new a({id:this.id,sublayerIds:E.clone(this.sublayerIds)})};var a;d([c.property({type:String,json:{write:!0}})],
b.prototype,"id",void 0);d([c.property({type:[Number],json:{read:{source:"subLayerIds"},write:{target:"subLayerIds"}}})],b.prototype,"sublayerIds",void 0);return b=a=d([c.subclass()],b)}(c.declared(h)),m=u.ofType(A),J=F.getLogger("esri.webscene.Slide");return function(h){function b(a){a=h.call(this,a)||this;a._currentAnimation=null;a.id=Date.now().toString(16)+"-slide-"+I++;a.title=new g.default;a.description=new l.default;a.thumbnail=new f.default;a.viewpoint=null;a.basemap=null;a.ground=null;a.environment=
new w;a.visibleLayers=new m;return a}t(b,h);b.prototype.castTitle=function(a){return"string"===typeof a?new g.default({text:a}):n.ensureType(g.default,a)};b.prototype.castDescription=function(a){return"string"===typeof a?new l.default({text:a}):n.ensureType(l.default,a)};b.prototype.castThumbnail=function(a){return"string"===typeof a?new f.default({url:a}):n.ensureType(f.default,a)};b.prototype.castBasemap=function(a){return v.ensureType(a)};Object.defineProperty(b.prototype,"visibleLayers",{set:function(a){this._set("visibleLayers",
D.referenceSetter(a,this._get("visibleLayers"),m))},enumerable:!0,configurable:!0});b.prototype.castVisibleLayers=function(a){return a&&"function"===typeof a.map?a.map(function(a){if("string"===typeof a)return{id:a};if(a instanceof G){var b=z(a);return{id:a.id,sublayerIds:b}}if(a.id)return{id:a.id,sublayerIds:a.sublayerIds};J.warn('Invalid visible layer, expected { id }, Layer or "id"');return a}):null};b.prototype.clone=function(){return new this.constructor({id:this.id,title:this.title.clone(),
thumbnail:this.thumbnail.clone(),description:this.description&&this.description.clone()||null,viewpoint:this.viewpoint&&this.viewpoint.clone()||null,basemap:this.basemap&&this.basemap.clone()||null,ground:this.ground&&this.ground.clone()||null,visibleLayers:this.visibleLayers.clone(),environment:this.environment&&this.environment.clone()||null})};b.prototype._updateVisibleLayersFrom=function(a){var b=this,e=[];return k.eachAlways(this._allLayers(a.map).map(function(b){return a.whenLayerView(b).then(function(a){if(a.visible){var q=
z(b);e.push(new A({id:a.layer.id,sublayerIds:q}))}})}).toArray()).then(function(){b.visibleLayers.removeAll();b.visibleLayers.addMany(e)})};b.prototype.updateFrom=function(a,b){var e=this;b={screenshot:r({format:"jpeg",quality:80,width:120,height:75,disableSlice:!0},b&&b.screenshot)};return a.when(function(){e.viewpoint=a.viewpoint.clone();e.environment.lighting=H.prototype.clone.apply(a.environment.lighting);e.basemap=a.map.basemap&&a.map.basemap.clone()||null;e.ground=a.map.ground?x.default.fromGround(a.map.ground):
null;return e._updateVisibleLayersFrom(a)}).then(function(){return a.takeScreenshot(b.screenshot)}).then(function(a){e.thumbnail=new f.default({url:a.dataUrl});return e})};b.prototype.applyTo=function(a,b){var e=this,c=r({animate:!0},b);return this._applyBasemap(a).then(function(){return k.all([e._applyViewpoint(a,c),e._applyLayerVisibility(a),e._applyGround(a)])}).then(function(){return e})};b.prototype._applyBasemap=function(a){var b=this;return this.basemap?this.basemap.load().catch(function(a){return a}).then(function(){a.map.basemap=
v.clonePreservingTiledLayers(b.basemap,a.map.basemap)}):k.resolve()};b.prototype._applyGround=function(a){this.ground&&(a.map.ground=this.ground.cloneAndApplyTo(a.map.ground));return k.resolve()};b.prototype._allLayers=function(a){var b=new u;this._collectLayers(a,b);this._collectLayers(a.ground,b);return b};b.prototype._collectLayers=function(a,b){var e=this;a.layers.forEach(function(a){b.add(a);a.layers&&e._collectLayers(a,b)})};b.prototype._applyLayerVisibility=function(a){var b=this;this.visibleLayers&&
this._allLayers(a.map).forEach(function(a){var c=b.visibleLayers.find(function(b){return b.id===a.id});a.visible=null!=c;var e=c&&c.sublayerIds,c=y(a);e&&c&&c.forEach(function(a){return a.visible=0<=e.indexOf(a.id)})})};b.prototype._applyViewpoint=function(a,b){if(this.viewpoint&&!b.ignoreViewpoint){this.viewpoint.camera.fov=a.camera.fov;if(b.animate){if(this.get("environment.lighting.date"))return this._animateToLighting(a,b);a.environment.lighting=this.environment.lighting.clone();return a.goTo(this.viewpoint,
b)}a.viewpoint=this.viewpoint}a.environment.lighting=this.environment.lighting.clone();return k.resolve()};b.prototype._animateToLighting=function(a,b){var c=this,d;"global"===a.viewingMode&&(d=this._animateLightingWithCamera(a));this._currentAnimation&&(this._currentAnimation.cancel(),this._currentAnimation=null);a.environment.lighting.cameraTrackingEnabled=!1;a.environment.lighting.directShadowsEnabled=this.environment.lighting.directShadowsEnabled;null!=this.environment.lighting.displayUTCOffset&&
(a.environment.lighting.displayUTCOffset=this.environment.lighting.displayUTCOffset);var f=a.goTo(this.viewpoint,b);this._currentAnimation=f;this._currentAnimation.catch(function(a){return a}).then(function(){d&&d.remove();c._currentAnimation===f&&(a.environment.lighting.cameraTrackingEnabled=!0)});this._currentAnimation.then(function(){a.environment.lighting=c.environment.lighting.clone()});return this._currentAnimation};b.prototype._getTime=function(a){var b=a.getTime();a=3600*a.getUTCHours()+60*
a.getUTCMinutes()+a.getUTCSeconds();return[b,a]};b.prototype._setTime=function(a,b,c){a.setTime(b);a.setUTCHours(c/3600);a.setUTCMinutes(c%3600/60);a.setUTCSeconds(c%3600%60);return a};b.prototype._animateLightingWithCamera=function(a){var b=this,c=this._getTime(new Date(a.environment.lighting.date.toString())),d=c[0],f=c[1],c=this._getTime(this.environment.lighting.date),h=c[0],k=c[1],g=a.renderCoordsHelper,l=p.vec3f64.create();g.toRenderCoords(a.camera.position,l);var n=p.vec3f64.create();g.toRenderCoords(this.viewpoint.camera.position,
n);var m=p.vec3f64.create(),r=new Date;return a.watch("camera",function(c){g.toRenderCoords(c.position,m);c=p.vec3.squaredDistance(l,m);var e=p.vec3.squaredDistance(n,m),q=0;0!==c+e&&(q=c/(c+e));a.environment.lighting.date=b._setTime(r,d+(h-d)*q,f+(k-f)*q)})};b.createFrom=function(a,b){return(new this).updateFrom(a,b)};d([c.property({type:String,json:{write:{isRequired:!0}}})],b.prototype,"id",void 0);d([c.property({type:g.default,json:{default:function(){return new g.default({text:""})},write:{isRequired:!0}}})],
b.prototype,"title",void 0);d([c.cast("title")],b.prototype,"castTitle",null);d([c.property({type:l.default,json:{write:{overridePolicy:function(a){return{enabled:!(!a||!a.text)}}}}})],b.prototype,"description",void 0);d([c.cast("description")],b.prototype,"castDescription",null);d([c.property({type:f.default,json:{default:function(){return new f.default({url:""})},write:{isRequired:!0}}})],b.prototype,"thumbnail",void 0);d([c.cast("thumbnail")],b.prototype,"castThumbnail",null);d([c.property({type:C,
nonNullable:!0,json:{write:{isRequired:!0}}})],b.prototype,"viewpoint",void 0);d([c.property({type:B,json:{read:{source:"baseMap"},write:{target:"baseMap"}}})],b.prototype,"basemap",void 0);d([c.cast("basemap")],b.prototype,"castBasemap",null);d([c.property({type:x.default,json:{write:!0}})],b.prototype,"ground",void 0);d([c.property({type:m,json:{write:{isRequired:!0}}})],b.prototype,"visibleLayers",null);d([c.cast("visibleLayers")],b.prototype,"castVisibleLayers",null);d([c.property({type:w,json:{write:!0}})],
b.prototype,"environment",void 0);return b=d([c.subclass("esri.webscene.Slide")],b)}(c.declared(h))});