// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.10/esri/copyright.txt for details.
//>>built
define("require exports ../../../core/tsSupport/assignHelper dojo/i18n!../../nls/smartMapping ../../../core/lang ../../../core/numberUtils ../../../core/promiseUtils ../../ClassBreaksRenderer ../../PointCloudRGBRenderer ../../PointCloudStretchRenderer ./support/ageUtils ./support/utils ../support/utils ../symbology/color ../../support/AuthoringInfo ../../support/AuthoringInfoVisualVariable ../../support/utils ../../visualVariables/ColorVariable".split(" "),function(T,l,h,v,E,F,d,x,G,H,p,e,f,n,y,I,
t,J){function K(a){if(!(a&&a.layer&&(a.field||a.valueExpression||a.sqlExpression)))return d.reject(e.createError("color-visual-variable:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required"));if(a.valueExpression&&!a.sqlExpression&&!a.view)return d.reject(e.createError("color-visual-variable:missing-parameters","View is required when 'valueExpression' is specified"));var b=h({},a);a=[0,1,2];var c=f.createLayerAdapter(b.layer,a);return(b.layer=c)?c.load().then(function(){var a=
c.geometryType;if("mesh"!==a&&b.worldScale){if("polyline"===a||"polygon"===a)return d.reject(e.createError("color-visual-variable:not-supported","'worldScale' sizing is not supported for polyline and polygon layers"));if(!b.view||"3d"!==b.view.type)return d.reject(e.createError("color-visual-variable:invalid-parameters","'view' parameter should be an instance of SceneView when 'worldScale' parameter is true"))}a=f.getFieldsList({field:b.field,normalizationField:b.normalizationField,valueExpression:b.valueExpression});
return(a=e.verifyBasicFieldValidity(c,a,"color-visual-variable:invalid-parameters"))?d.reject(a):b}):d.reject(e.createError("color-visual-variable:invalid-parameters","'layer' must be one of these types: "+f.getLayerTypeLabels(a).join(", ")))}function L(a){if(!(a&&a.layer&&(a.field||a.valueExpression||a.sqlExpression)))return d.reject(e.createError("color-continuous-renderer:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required"));if(a.valueExpression&&
!a.sqlExpression&&!a.view)return d.reject(e.createError("color-continuous-renderer:missing-parameters","View is required when 'valueExpression' is specified"));var b=h({},a);b.symbolType=b.symbolType||"2d";b.defaultSymbolEnabled=null==b.defaultSymbolEnabled?!0:b.defaultSymbolEnabled;a=[0,1,2];var c=f.createLayerAdapter(b.layer,a);return(b.layer=c)?c.load().then(function(){var a=c.geometryType,g=-1<b.symbolType.indexOf("3d");if("mesh"===a)b.symbolType="3d-volumetric",b.colorMixMode=b.colorMixMode||
"replace",b.edgesType=b.edgesType||"none";else{if(g&&("polyline"===a||"polygon"===a))return d.reject(e.createError("color-continuous-renderer:not-supported","3d symbols are not supported for polyline and polygon layers"));if(-1<b.symbolType.indexOf("3d-volumetric")&&(!b.view||"3d"!==b.view.type))return d.reject(e.createError("color-continuous-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'"))}a=
f.getFieldsList({field:b.field,normalizationField:b.normalizationField,valueExpression:b.valueExpression});return(a=e.verifyBasicFieldValidity(c,a,"color-continuous-renderer:invalid-parameters"))?d.reject(a):b}):d.reject(e.createError("color-continuous-renderer:invalid-parameters","'layer' must be one of these types: "+f.getLayerTypeLabels(a).join(", ")))}function M(a){if(!a||!a.layer||!a.field&&!a.valueExpression)return d.reject(e.createError("color-class-breaks-renderer:missing-parameters","'layer' and 'field' or 'valueExpression' parameters are required"));
if(a.valueExpression&&!a.view)return d.reject(e.createError("color-class-breaks-renderer:missing-parameters","View is required when 'valueExpression' is specified"));var b=h({},a);b.symbolType=b.symbolType||"2d";b.defaultSymbolEnabled=null==b.defaultSymbolEnabled?!0:b.defaultSymbolEnabled;b.classificationMethod=b.classificationMethod||"equal-interval";b.normalizationType=f.getNormalizationType(b);a=[0,1,2];var c=f.createLayerAdapter(b.layer,a);return(b.layer=c)?null!=b.minValue&&null!=b.maxValue||
null==b.minValue&&null==b.maxValue?c.load().then(function(){var a=c.geometryType,g=-1<b.symbolType.indexOf("3d");if("mesh"===a)b.symbolType="3d-volumetric",b.colorMixMode=b.colorMixMode||"replace",b.edgesType=b.edgesType||"none";else{if(g&&("polyline"===a||"polygon"===a))return d.reject(e.createError("color-class-breaks-renderer:not-supported","3d symbols are not supported for polyline and polygon layers"));if(-1<b.symbolType.indexOf("3d-volumetric")&&(!b.view||"3d"!==b.view.type))return d.reject(e.createError("color-class-breaks-renderer:invalid-parameters",
"'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'"))}a=f.getFieldsList({field:b.field,normalizationField:b.normalizationField});return(a=e.verifyBasicFieldValidity(c,a,"color-class-breaks-renderer:invalid-parameters"))?d.reject(a):b}):d.reject(e.createError("color-class-breaks-renderer:missing-parameters","Both 'minValue' and 'maxValue' are required when specifying custom data range")):d.reject(e.createError("color-class-breaks-renderer:invalid-parameters",
"'layer' must be one of these types: "+f.getLayerTypeLabels(a).join(", ")))}function N(a){a=h({},a);delete a.basemap;delete a.colorScheme;delete a.legendOptions;delete a.symbolType;delete a.defaultSymbolEnabled;delete a.colorMixMode;delete a.edgesType;a.analyzeData=!(null!=a.minValue&&null!=a.maxValue);return a}function O(a){if(!a||!a.layer)return d.reject(e.createError("color-point-cloud-true-color-renderer:missing-parameters","'layer' parameter is required"));var b=h({},a);a=[3];var c=f.createLayerAdapter(b.layer,
a);b.layer=c;b.density=b.density||25;b.size=b.size||"100%";return e.isValidPointSize(b.size)?c?c.load().then(function(){return b}):d.reject(e.createError("color-point-cloud-true-color-renderer:invalid-parameters","'layer' must be one of these types: "+f.getLayerTypeLabels(a).join(", "))):d.reject(e.createError("color-point-cloud-true-color-renderer:invalid-parameters","Invalid 'size' parameter. It should be a string of the form '100%'"))}function P(a){if(!(a&&a.layer&&a.field))return d.reject(e.createError("color-point-cloud-continuous-renderer:missing-parameters",
"'layer' and 'field' parameters are required"));var b=a.field.toLowerCase();if("intensity"!==b&&"elevation"!==b)return d.reject(e.createError("color-point-cloud-continuous-renderer:invalid-parameters","'field' should be either 'intensity' or 'elevation'"));var c=h({},a);a=[3];b=f.createLayerAdapter(c.layer,a);c.layer=b;c.density=c.density||25;c.size=c.size||"100%";return e.isValidPointSize(c.size)?b?b.load().then(function(){return c}):d.reject(e.createError("color-point-cloud-continuous-renderer:invalid-parameters",
"'layer' must be one of these types: "+f.getLayerTypeLabels(a).join(", "))):d.reject(e.createError("color-point-cloud-continuous-renderer:invalid-parameters","Invalid 'size' parameter. It should be a string of the form '100%'"))}function z(a){a=h({},a);var b=-1<a.symbolType.indexOf("3d-volumetric");delete a.symbolType;delete a.defaultSymbolEnabled;delete a.colorMixMode;delete a.edgesType;a.worldScale=b;return a}function Q(a){if(!(a&&a.layer&&a.view&&a.startTime&&a.endTime))return d.reject(e.createError("color-age-renderer:missing-parameters",
"'layer', 'view', startTime', 'endTime' parameters are required"));var b=h({},a);b.symbolType=b.symbolType||"2d";b.defaultSymbolEnabled=null==b.defaultSymbolEnabled?!0:b.defaultSymbolEnabled;a=[0,1,2];var c=f.createLayerAdapter(b.layer,a);return(b.layer=c)?c.load().then(function(){var a=c.geometryType,g=-1<b.symbolType.indexOf("3d");if("mesh"===a)b.symbolType="3d-volumetric",b.colorMixMode=b.colorMixMode||"replace",b.edgesType=b.edgesType||"none";else{if(g&&("polyline"===a||"polygon"===a))return d.reject(e.createError("color-age-renderer:not-supported",
"3d symbols are not supported for polyline and polygon layers"));if(-1<b.symbolType.indexOf("3d-volumetric")&&(!b.view||"3d"!==b.view.type))return d.reject(e.createError("color-age-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'"))}return(a=p.verifyDates(c,b.startTime,b.endTime,"color-age-renderer:invalid-parameters"))?d.reject(a):b.unit&&-1===p.supportedAgeUnits.indexOf(b.unit)?d.reject(e.createError("color-age-renderer:invalid-unit",
"Supported units are: "+p.supportedAgeUnits.join(", "))):b}):d.reject(e.createError("color-age-renderer:invalid-parameters","'layer' must be one of these types: "+f.getLayerTypeLabels(a).join(", ")))}function u(a,b){var c=a.colorScheme,e=a.basemap;if(c)c=n.cloneScheme(c);else{b=b||a.theme||"high-to-low";var d=n.getSchemes({theme:b,basemap:a.basemap,geometryType:a.geometryType,worldScale:a.worldScale,view:a.view});d&&(e=d.basemapId,c=a.schemeId?n.getSchemeById({id:b+"/"+e+"/"+a.schemeId,geometryType:a.geometryType}):
d.primaryScheme)}return{scheme:c,basemapId:e}}function A(a,b,c){for(var e=(b-a)/(c-1),d=[a],k=1;k<=c-2;k++)d.push(a+k*e);d.push(b);return F.round(d,{strictBounds:!0})}function B(a,b,c,d){var g=d.field,k=d.layer.geometryType,C=d.defaultSymbolEnabled,m=n.cloneScheme(a.colorScheme);return{renderer:new x({classBreakInfos:[{minValue:-D,maxValue:D,symbol:e.createSymbol(m,m.noDataColor,k,d.symbolType,d.colorMixMode,d.edgesType)}],defaultLabel:C?v.other:null,defaultSymbol:C?e.createSymbol(m,m.noDataColor,
k,d.symbolType,d.colorMixMode,d.edgesType):null,field:g,normalizationType:b,normalizationField:c,valueExpression:d.valueExpression,valueExpressionTitle:d.valueExpressionTitle,visualVariables:[a.visualVariable.clone()],authoringInfo:a.authoringInfo&&a.authoringInfo.clone()}),visualVariable:a.visualVariable.clone(),statistics:a.statistics,defaultValuesUsed:a.defaultValuesUsed,colorScheme:n.cloneScheme(a.colorScheme),basemapId:a.basemapId}}function w(a){return K(a).then(function(a){var b=a.normalizationField,
m=b?"field":void 0;return(a.statistics?d.resolve(a.statistics):e.getSummaryStatistics({layer:a.layer,field:a.field,valueExpression:a.valueExpression,sqlExpression:a.sqlExpression,sqlWhere:a.sqlWhere,normalizationType:m,normalizationField:b,minValue:a.minValue,maxValue:a.maxValue,view:a.view})).then(function(c){var k=a.layer,m=a.field,g=m&&"function"!==typeof m?k.getField(m):null,f=g&&"date"===g.type,k=u({basemap:a.basemap,theme:a.theme,geometryType:k.geometryType,colorScheme:a.colorScheme,worldScale:a.worldScale,
view:a.view});if(g=k.scheme){var h=e.createColors(g.colors,5);if(5>h.length)c=d.reject(e.createError("color-visual-variable:insufficient-info","Color scheme does not have enough colors"));else{var q=e.getDefaultDataRange(c,f,!0),r=-1<g.id.indexOf("seq-"),r=q?A(q[0],q[1],5):e.createStopValues(c,r),h=e.createColors(h,5),m=new J({field:m,valueExpression:a.valueExpression,valueExpressionTitle:a.valueExpressionTitle,normalizationField:b,stops:t.createColorStops({values:r,isDate:f,dateFormatOptions:f?t.timelineDateFormatOptions:
null,colors:h,labelIndexes:[0,2,4]}),legendOptions:a.legendOptions}),f=new I({type:"color",minSliderValue:c.min,maxSliderValue:c.max,theme:g.theme}),f=new y({visualVariables:[f]});c=d.resolve({basemapId:k.basemapId,visualVariable:m,statistics:c,defaultValuesUsed:!!q,colorScheme:n.cloneScheme(g),authoringInfo:f})}}else c=d.reject(e.createError("color-visual-variable:insufficient-info","Unable to find color scheme"));return c})})}function R(a,b){a=a.colorsForClassBreaks;var c;if(a&&0<a.length&&(a.some(function(a){a.numClasses===
b&&(c=a.colors);return!!c}),!c)){var d=a[a.length-1];a=b-d.numClasses;if(0<a){var g=d.colors[d.numClasses-1];c=d.colors.splice(0);for(d=1;d<=a;d++)c.push(g)}}c&&(c=e.createColors(c,c.length));return c}function S(a,b){var c=a.defaultSymbolEnabled,m=a.layer.geometryType,g=u({basemap:a.basemap,geometryType:m,colorScheme:a.colorScheme,worldScale:-1<a.symbolType.indexOf("3d-volumetric"),view:a.view}),k=g.scheme,f=b.result,h=f.classBreakInfos,l=a.classificationMethod,p="standard-deviation"===l,q=a.normalizationType;
if(!k)return d.reject(e.createError("color-class-breaks-renderer:insufficient-info","Unable to find color scheme"));var r=R(k,h.length);if(!r||r.length!==h.length)return d.reject(e.createError("color-class-breaks-renderer:insufficient-info","Color scheme does not have enough colors"));c=new x({classBreakInfos:h.map(function(b,c){return{minValue:b.minValue,maxValue:b.maxValue,symbol:e.createSymbol(k,r[c],m,a.symbolType,a.colorMixMode,a.edgesType),label:b.label}}),defaultLabel:c?v.other:null,defaultSymbol:c?
e.createSymbol(k,k.noDataColor,m,a.symbolType,a.colorMixMode,a.edgesType):null,field:a.field,valueExpression:a.valueExpression,valueExpressionTitle:a.valueExpressionTitle,normalizationType:q,normalizationField:a.normalizationField,normalizationTotal:"percent-of-total"===q?f.normalizationTotal:void 0,legendOptions:a.legendOptions,authoringInfo:new y({type:"class-breaks-color",classificationMethod:l,standardDeviationInterval:a.standardDeviationInterval})});p||t.setLabelsForClassBreaks({classBreakInfos:c.classBreakInfos,
classificationMethod:l,normalizationType:q,round:!0});return d.resolve({renderer:c,colorScheme:n.cloneScheme(k),classBreaksResult:f,defaultValuesUsed:b.defaultValuesUsed,basemapId:g.basemapId})}Object.defineProperty(l,"__esModule",{value:!0});var D=Math.pow(2,53)-1;l.createVisualVariable=w;l.createContinuousRenderer=function(a){return L(a).then(function(a){return w(z(a)).then(function(b){var c=a.normalizationField;return B(b,c?"field":void 0,c,a)})})};l.createClassBreaksRenderer=function(a){return M(a).then(function(a){return e.getClassBreaks(N(a)).then(function(b){return S(a,
b)})})};l.createPCTrueColorRenderer=function(a){return O(a).then(function(a){return{renderer:new G({field:"RGB",pointsPerInch:a.density,pointSizeAlgorithm:e.getPointSizeAlgorithm(a.size)})}})};l.createPCContinuousRenderer=function(a){return P(a).then(function(a){return(a.statistics?d.resolve(a.statistics):e.getSummaryStatistics({layer:a.layer,field:a.field})).then(function(b){var c=u({basemap:a.basemap,colorScheme:a.colorScheme,geometryType:a.layer.geometryType,schemeId:"elevation"===a.field.toLowerCase()?
"point-cloud-elevation-scheme":"point-cloud-intensity-scheme"}),g=c.scheme;if(g){var f=e.createColors(g.colors,5);if(5>f.length)b=d.reject(e.createError("color-point-cloud-continuous-renderer:insufficient-info","Color scheme does not have enough colors"));else{var h=e.getDefaultDataRange(b,!1,!0),l=h?A(h[0],h[1],5):e.createStopValues(b),f=t.createColorStops({values:l,isDate:!1,dateFormatOptions:null,colors:f,labelIndexes:[0,2,4]});b=d.resolve({stops:f,basemapId:c.basemapId,statistics:b,defaultValuesUsed:!!h,
colorScheme:n.cloneScheme(g)})}}else b=d.reject(e.createError("color-point-cloud-continuous-renderer:insufficient-info","Unable to find color scheme"));return b}).then(function(b){return{renderer:new H({field:a.field,pointsPerInch:a.density,pointSizeAlgorithm:e.getPointSizeAlgorithm(a.size),stops:b.stops}),basemapId:b.basemapId,statistics:b.statistics,defaultValuesUsed:b.defaultValuesUsed,colorScheme:b.colorScheme}})})};l.createAgeRenderer=function(a){return Q(a).then(function(a){var b=a.defaultSymbolEnabled,
e=a.view,f=a.layer,k=a.startTime,l=a.endTime,n=a.symbolType,t=a.colorMixMode,u=a.edgesType;return(a.unit?d.resolve({unit:a.unit,statistics:null,valueExpression:null}):p.getSuggestedAgeUnit({view:e,layer:f,startTime:k,endTime:l})).then(function(c){var d=c.unit,e=c.statistics,g=c.valueExpression||p.getAgeExpressions({layer:f,startTime:k,endTime:l,unit:d}).valueExpression;c=E.substitute({unit:d,startTime:p.formatDate(k,d,f),endTime:p.formatDate(l,d,f)},v["ageInfo_"+d]);return w(z({layer:f,basemap:a.basemap,
valueExpression:g,symbolType:n,statistics:e,legendOptions:{title:c},colorScheme:a.colorScheme,theme:a.theme,view:a.view})).then(function(a){a=B(a,null,null,{layer:f,valueExpression:g,defaultSymbolEnabled:b,symbolType:n,colorMixMode:t,edgesType:u});return h({},a,{unit:d})})})})}});