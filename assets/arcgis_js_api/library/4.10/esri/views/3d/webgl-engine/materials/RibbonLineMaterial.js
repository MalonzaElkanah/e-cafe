// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.10/esri/copyright.txt for details.
//>>built
define("require exports ../../../../core/tsSupport/extendsHelper ../../../../core/Logger ../../../../core/libs/gl-matrix-2/gl-matrix ../../support/geometryUtils ../../support/buffer/InterleavedLayout ../lib/ComponentUtils ../lib/GLMaterial ../lib/Material ../lib/Util ./internal/MaterialUtil ../shaders/RibbonLinePrograms".split(" "),function(O,ia,H,U,e,f,P,V,Q,W,k,D,R){var X=U.getLogger("esri.views.3d.webgl-engine.materials.RibbonLineMaterial");O=function(w){function a(a,d){d=w.call(this,d)||this;
d.params=D.copyParameters(a,Y);"miter"!==d.params.join&&(d.params.miterLimit=0);d.numVertsAtJoin="wall"===d.params.type?2:4;d.numVertsAtCap=2;d.canBeMerged="screen"===d.params.type&&null==d.params.stippleLength;d.bufferWriter="wall"===d.params.type?new Z:new aa(d.canBeMerged);return d}H(a,w);a.prototype.getColor=function(){return this.params.color};a.prototype.dispose=function(){};a.prototype.getParams=function(){return this.params};a.prototype.getParameterValues=function(){var a=D.copyParameters(this.params);
a.miterLimit="miter"===a.join?a.miterLimit:0;return a};a.prototype.setParameterValues=function(a){for(var d in a)k.assert("type"!==d,"RibbonLineMaterial: type cannot be changed after creation"),k.assert("stippleLength"!==d||null!=a[d]===(null!=this.params[d]),"RibbonLineMaterial: stippleLength on/off cannot be changed after creation"),this.params[d]=a[d];"miter"!==this.params.join&&(this.params.miterLimit=0);this.notifyDirty("matChanged")};a.prototype.intersect=function(a,d,b,c,h,t,w,y){if(c.isSelection&&
!V.isAllHidden(d.componentVisibilities,a.data.componentOffsets))if(k.isTranslationMatrix(b)){d=a.data;a=d.getVertexAttr()[k.VertexAttrConstants.POSITION].data;d=d.getVertexAttr()[k.VertexAttrConstants.SIZE];t=c.camera;y=c.point;d=((d&&d.data[0])+this.params.width)/2+4;e.vec3.set(G[0],y[0]-d,y[1]+d,0);e.vec3.set(G[1],y[0]+d,y[1]+d,0);e.vec3.set(G[2],y[0]+d,y[1]-d,0);e.vec3.set(G[3],y[0]-d,y[1]-d,0);for(var l=0;4>l;l++)t.unprojectPoint(G[l],p[l]);f.plane.fromPoints(t.eye,p[0],p[1],I);f.plane.fromPoints(t.eye,
p[1],p[2],J);f.plane.fromPoints(t.eye,p[2],p[3],K);f.plane.fromPoints(t.eye,p[3],p[0],L);h=Number.MAX_VALUE;for(l=0;l<a.length-5;l+=3)if(q[0]=a[l]+b[12],q[1]=a[l+1]+b[13],q[2]=a[l+2]+b[14],g[0]=a[l+3]+b[12],g[1]=a[l+4]+b[13],g[2]=a[l+5]+b[14],!(0>f.plane.signedDistance(I,q)&&0>f.plane.signedDistance(I,g)||0>f.plane.signedDistance(J,q)&&0>f.plane.signedDistance(J,g)||0>f.plane.signedDistance(K,q)&&0>f.plane.signedDistance(K,g)||0>f.plane.signedDistance(L,q)&&0>f.plane.signedDistance(L,g))){t.projectPoint(q,
E);t.projectPoint(g,F);if(0>E[2]&&0<F[2]){e.vec3.subtract(m,q,g);var n=t.frustum,M=-f.plane.signedDistance(n.planes[4],q),n=M/e.vec3.dot(m,n.planes[4]);e.vec3.scale(m,m,n);e.vec3.add(q,q,m);t.projectPoint(q,E)}else if(0<E[2]&&0>F[2])e.vec3.subtract(m,g,q),n=t.frustum,M=-f.plane.signedDistance(n.planes[4],g),n=M/e.vec3.dot(m,n.planes[4]),e.vec3.scale(m,m,n),e.vec3.add(g,g,m),t.projectPoint(g,F);else if(0>E[2]&&0>F[2])continue;n=k.pointLineSegmentDistanceSquared2D(E,F,y);n<h&&(h=n,e.vec3.copy(S,q),
e.vec3.copy(T,g))}b=c.p0;c=c.p1;h<d*d&&(a=Number.MAX_VALUE,f.lineSegment.closestLineSegmentPoint(f.lineSegment.fromPoints(S,T,ba),f.lineSegment.fromPoints(b,c,ca),C)&&(e.vec3.subtract(C,C,b),a=e.vec3.length(C),e.vec3.scale(C,C,1/a),a/=e.vec3.distance(b,c)),w(a,C))}else X.error("intersection assumes a translation-only matrix")};a.prototype.getGLMaterials=function(){return{color:da,depthShadowMap:void 0,normal:void 0,depth:void 0,highlight:ea}};a.prototype.getAllTextureIds=function(){return[]};return a}(W);
var da=function(e){function a(a,d){a=e.call(this,a,d)||this;a.updateParameters();return a}H(a,e);a.prototype.updateParameters=function(){this.params=this.material.getParameterValues();this.selectProgram()};a.prototype.beginSlot=function(a){return a===(this.params.writeDepth?6:9)};a.prototype.getProgram=function(){return this.program};a.prototype.selectProgram=function(){this.program=this.programRep.getProgram(R.colorPass,{screenScale:"screen"===this.params.type,wall:"wall"===this.params.type,stipple:null!=
this.params.stippleLength,slice:this.params.slicePlaneEnabled})};a.prototype.bind=function(a,d){var b=this.program,c=this.params;a.bindProgram(b);b.setUniform4fv("eColor",c.color);b.setUniform1f("miterLimit",c.miterLimit);b.setUniform1f("nearPlane",d.nearFar[0]);"screen"===c.type?(b.setUniform2fv("screenSize",[d.viewport[2],d.viewport[3]]),b.setUniform1f("extLineWidth",c.width*d.pixelRatio)):b.setUniform1f("extLineWidth",c.width);null!=c.stippleLength&&b.setUniform1f("stippleLengthDoubleInv",c.stippleLength?
1/(2*c.stippleLength):0);c.polygonOffset&&(a.setPolygonOffsetFillEnabled(!0),a.setPolygonOffset(0,-4));a.setFaceCullingEnabled(!1);a.setBlendingEnabled(!0);a.setBlendFunctionSeparate(770,771,1,771);a.setDepthTestEnabled(!0);a.setDepthWriteEnabled(1<=c.color[3]&&c.writeDepth)};a.prototype.release=function(a){this.params.polygonOffset&&a.setPolygonOffsetFillEnabled(!1);a.setBlendingEnabled(!1);a.setDepthWriteEnabled(!0)};a.prototype.bindView=function(a,d){a=this.program;var b=this.params;D.bindView(d.origin,
d.view,a);b.slicePlaneEnabled&&D.bindSlicePlane(d.origin,d.slicePlane,a)};a.prototype.bindInstance=function(a,d){this.program.setUniformMatrix4fv("model",d.transformation)};a.prototype.getDrawMode=function(){return 5};return a}(Q),ea=function(e){function a(a,d){a=e.call(this,a,d)||this;a.updateParameters();return a}H(a,e);a.prototype.updateParameters=function(){this.params=this.material.getParameterValues();this.selectProgram()};a.prototype.beginSlot=function(a){return 4===a};a.prototype.getProgram=
function(){return this.program};a.prototype.selectProgram=function(){this.program=this.programRep.getProgram(R.highlightPass,{screenScale:"screen"===this.params.type,wall:"wall"===this.params.type,stipple:null!=this.params.stippleLength,slice:this.params.slicePlaneEnabled})};a.prototype.bind=function(a,d){var b=this.program,c=this.params;a.bindProgram(b);b.setUniform4fv("eColor",c.color);b.setUniform1f("miterLimit",c.miterLimit);b.setUniform1f("nearPlane",d.nearFar[0]);"screen"===c.type?(b.setUniform2fv("screenSize",
[d.viewport[2],d.viewport[3]]),b.setUniform1f("extLineWidth",c.width*d.pixelRatio)):b.setUniform1f("extLineWidth",c.width);null!=c.stippleLength&&b.setUniform1f("stippleLengthDoubleInv",c.stippleLength?1/(2*c.stippleLength):0);c.polygonOffset&&(a.setPolygonOffsetFillEnabled(!0),a.setPolygonOffset(0,-4));a.setFaceCullingEnabled(!1);a.setDepthTestEnabled(!0);a.setDepthWriteEnabled(1<=c.color[3])};a.prototype.release=function(a){this.params.polygonOffset&&a.setPolygonOffsetFillEnabled(!1);a.setDepthWriteEnabled(!0)};
a.prototype.bindView=function(a,d){a=this.program;var b=this.params;D.bindView(d.origin,d.view,a);b.slicePlaneEnabled&&D.bindSlicePlane(d.origin,d.slicePlane,a)};a.prototype.bindInstance=function(a,d){this.program.setUniformMatrix4fv("model",d.transformation)};a.prototype.getDrawMode=function(){return 5};return a}(Q),Y={color:[1,1,1,1],width:0,type:"screen",join:"miter",miterLimit:5,writeDepth:!0,polygonOffset:!1,stippleLength:null,slicePlaneEnabled:!1},N=P.newLayout().vec3f(k.VertexAttrConstants.POSITION).vec2f(k.VertexAttrConstants.UV0).vec3f(k.VertexAttrConstants.AUXPOS1).vec3f(k.VertexAttrConstants.AUXPOS2).vec4f(k.VertexAttrConstants.COLOR).f32(k.VertexAttrConstants.SIZE),
aa=function(){function e(a){this.canBeMerged=a;this.vertexBufferLayout=N;this.numVertsAtJoin=4;this.numVertsAtCap=2}e.prototype.allocate=function(a){return N.createBuffer(a)};e.prototype.elementCount=function(a){a=(a.indices[k.VertexAttrConstants.POSITION].length/2+1-2)*this.numVertsAtJoin+2*this.numVertsAtCap;this.canBeMerged&&(a+=2);return a};e.prototype.write=function(a,e,d,b,c){d=e.vertexAttr[k.VertexAttrConstants.POSITION].data;var h=e.indices&&e.indices[k.VertexAttrConstants.POSITION];h&&h.length!==
2*(d.length/3-1)&&console.warn("RibbonLineMaterial does not support indices");h=e.vertexAttr[k.VertexAttrConstants.COLOR]?e.vertexAttr[k.VertexAttrConstants.COLOR].data:fa;e=e.vertexAttr[k.VertexAttrConstants.SIZE]?e.vertexAttr[k.VertexAttrConstants.SIZE].data:ga;var t=d.length/3;a=a.transformation;b=b.position.typedBuffer;var f=0,l=this.vertexBufferLayout.stride/4,q=c*=l;this.canBeMerged&&(c+=l);var n=d[0],g=d[1],m=d[2];if(a)var v=n,x=g,r=m,n=a[0]*v+a[4]*x+a[8]*r+a[12],g=a[1]*v+a[5]*x+a[9]*r+a[13],
m=a[2]*v+a[6]*x+a[10]*r+a[14];var z=d[3],A=d[4],r=d[5];a&&(v=z,x=A,z=a[0]*v+a[4]*x+a[8]*r+a[12],A=a[1]*v+a[5]*x+a[9]*r+a[13],r=a[2]*v+a[6]*x+a[10]*r+a[14]);for(var w=n,p=g,B=m,u=0;u<t;u++)v=3*u,u<t-1&&(z=d[v+3],A=d[v+4],r=d[v+5],a&&(v=z,x=A,z=a[0]*v+a[4]*x+a[8]*r+a[12],A=a[1]*v+a[5]*x+a[9]*r+a[13],r=a[2]*v+a[6]*x+a[10]*r+a[14])),f+=Math.sqrt((w-n)*(w-n)+(p-g)*(p-g)+(B-m)*(B-m)),b[c++]=w,b[c++]=p,b[c++]=B,b[c++]=f,b[c++]=0===u?-1.2:-1,b[c++]=n,b[c++]=g,b[c++]=m,b[c++]=z,b[c++]=A,b[c++]=r,b[c++]=h[0],
b[c++]=h[1],b[c++]=h[2],b[c++]=h[3],b[c++]=e[0],b[c++]=w,b[c++]=p,b[c++]=B,b[c++]=f,b[c++]=0===u?1.2:1,b[c++]=n,b[c++]=g,b[c++]=m,b[c++]=z,b[c++]=A,b[c++]=r,b[c++]=h[0],b[c++]=h[1],b[c++]=h[2],b[c++]=h[3],b[c++]=e[0],0<u&&u<t-1&&(b[c++]=w,b[c++]=p,b[c++]=B,b[c++]=f,b[c++]=-1.2,b[c++]=n,b[c++]=g,b[c++]=m,b[c++]=z,b[c++]=A,b[c++]=r,b[c++]=h[0],b[c++]=h[1],b[c++]=h[2],b[c++]=h[3],b[c++]=e[0],b[c++]=w,b[c++]=p,b[c++]=B,b[c++]=f,b[c++]=1.2,b[c++]=n,b[c++]=g,b[c++]=m,b[c++]=z,b[c++]=A,b[c++]=r,b[c++]=h[0],
b[c++]=h[1],b[c++]=h[2],b[c++]=h[3],b[c++]=e[0]),n=w,g=p,m=B,w=z,p=A,B=r;if(this.canBeMerged){for(u=q;u<q+l;u++)b[u]=b[u+l];d=c-l;for(u=0;u<l;u++)b[c++]=b[d++]}};return e}(),ha=P.newLayout().vec3f(k.VertexAttrConstants.POSITION).vec2f(k.VertexAttrConstants.UV0),Z=function(){function f(){this.vertexBufferLayout=ha;this.numVertsAtCap=this.numVertsAtJoin=2;this.tmpCurrent=e.vec3f64.create();this.tmpLast=e.vec3f64.create()}f.prototype.allocate=function(a){return N.createBuffer(a)};f.prototype.elementCount=
function(a){return(a.indices[k.VertexAttrConstants.POSITION].length/2+1-2)*this.numVertsAtJoin+2*this.numVertsAtCap};f.prototype.write=function(a,f,d,b,c){d=f.vertexAttr[k.VertexAttrConstants.POSITION].data;(f=f.indices&&f.indices[k.VertexAttrConstants.POSITION])&&f.length!==2*(d.length/3-1)&&console.warn("RibbonLineMaterial does not support indices");f=d.length/3;a=a.transformation;var h=0,g=this.tmpCurrent,m=this.tmpLast;e.vec3.set(g,d[0],d[1],d[2]);for(var l=0;l<f;l++){var p=3*l;e.vec3.copy(m,
g);e.vec3.set(g,d[p],d[p+1],d[p+2]);a&&e.vec3.transformMat4(g,g,a);h+=e.vec3.squaredDistance(m,g);b.position.setVec(c,g);b.uv0.set(c,0,h);b.uv0.set(c,1,-1);++c;b.position.setVec(c,g);b.uv0.set(c,0,h);b.uv0.set(c,1,1);++c}};return f}(),fa=[255,255,255,255],ga=[0,0,0,0],q=e.vec3f64.create(),g=e.vec3f64.create(),m=e.vec3f64.create(),C=e.vec3f64.create(),E=e.vec3f64.create(),F=e.vec3f64.create(),S=e.vec3f64.create(),T=e.vec3f64.create(),ba=f.lineSegment.create(),ca=f.lineSegment.create(),G=[e.vec3f64.create(),
e.vec3f64.create(),e.vec3f64.create(),e.vec3f64.create()],p=[e.vec3f64.create(),e.vec3f64.create(),e.vec3f64.create(),e.vec3f64.create()],I=f.plane.create(),J=f.plane.create(),K=f.plane.create(),L=f.plane.create();return O});