// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.10/esri/copyright.txt for details.
//>>built
define("require exports ../../../../core/compilerUtils ../../../../core/Logger ../../../../core/ObjectStack ../../../../core/libs/gl-matrix-2/gl-matrix ../mathUtils ../stack ./lineSegment ./plane ./ray ./vector".split(" "),function(E,e,P,Q,w,d,F,h,q,g,R,r){function t(a){void 0===a&&(a=e.UP);return{plane:g.create(a.plane),origin:d.vec3f64.clone(a.origin),basis1:d.vec3f64.clone(a.basis1),basis2:d.vec3f64.clone(a.basis2)}}function x(a,b){void 0===b&&(b=t());return G(a.origin,a.basis1,a.basis2,b)}function G(a,
b,c,f){void 0===f&&(f=t());d.vec3.copy(f.origin,a);d.vec3.copy(f.basis1,b);d.vec3.copy(f.basis2,c);g.fromVectorsAndPoint(c,b,a,f.plane);a=f;1E-6<Math.abs(d.vec3.dot(a.basis1,a.basis2)/(d.vec3.length(a.basis1)*d.vec3.length(a.basis2)))&&y.warn("fromValues()","Provided basis vectors are not perpendicular");1E-6<Math.abs(d.vec3.dot(a.basis1,a.plane))&&y.warn("fromValues()","Basis vectors and plane normal are not perpendicular");1E-6<Math.abs(-d.vec3.dot(a.plane,a.origin)-a.plane[3])&&y.warn("fromValues()",
"Plane offset is not consistent with plane origin");return f}function H(a,b,c){a!==c&&x(a,c);a=d.vec3.scale(h.sv3d.get(),a.plane,b);d.vec3.add(c.origin,c.origin,a);c.plane[3]-=b;return c}function I(a,b){void 0===b&&(b=t());var c=(a[2]-a[0])/2,f=(a[3]-a[1])/2;d.vec3.set(b.origin,a[0]+c,a[1]+f,0);d.vec3.set(b.basis1,c,0,0);d.vec3.set(b.basis2,0,f,0);g.fromValues(0,0,1,0,b.plane);return b}function z(a,b,c){return g.intersectRay(a.plane,b,c)?J(a,c):!1}function K(a,b,c){var f=u.get(),e=u.get();L(a,b,f,
e);for(var e=Number.POSITIVE_INFINITY,k=0,p=A;k<p.length;k++){var m=B(a,p[k],v.get()),n=h.sv3d.get();g.intersectLineSegment(f,m,n)&&(m=F.directionFromTo(h.sv3d.get(),b.origin,n),m=Math.abs(F.acos(d.vec3.dot(b.direction,m))),m<e&&(e=m,d.vec3.copy(c,n)))}return e===Number.POSITIVE_INFINITY?M(a,b,c):c}function M(a,b,c){if(z(a,b,c))return c;var f=u.get(),e=u.get();L(a,b,f,e);for(var k=Number.POSITIVE_INFINITY,p=0,m=A;p<m.length;p++){var n=B(a,m[p],v.get()),l=h.sv3d.get();g.intersectLineSegmentClamp(f,
n,l)&&(n=R.distance2(b,l),g.isPointInside(e,l)&&n<k&&(k=n,d.vec3.copy(c,l)))}C(a,b.origin)<k&&d.vec3.copy(c,b.origin);return c}function N(a,b,c){var f=a.origin,e=a.basis1,k=a.basis2;b=d.vec3.subtract(h.sv3d.get(),b,f);e=r.projectPointSignedLength(e,b)/d.vec3.length(e);k=r.projectPointSignedLength(k,b)/d.vec3.length(k);a=r.projectPointSignedLength(a.plane,b);return d.vec3.set(c,e,k,a)}function C(a,b){b=N(a,b,h.sv3d.get());var c=a.basis2;a=d.vec3.length(a.basis1);c=d.vec3.length(c);a=Math.max(Math.abs(b[0])-
a,0);c=Math.max(Math.abs(b[1])-c,0);b=b[2];return a*a+c*c+b*b}function D(a,b){var c=-a.plane[3];return r.projectPointSignedLength(a.plane,b)-c}function J(a,b){var c=d.vec3.subtract(h.sv3d.get(),b,a.origin);b=d.vec3.squaredLength(a.basis1);var f=d.vec3.squaredLength(a.basis2),e=d.vec3.dot(a.basis1,c);a=d.vec3.dot(a.basis2,c);return 0>-e-b&&0>e-b&&0>-a-f&&0>a-f}function O(a,b){var c=v.get();d.vec3.copy(c.origin,a.origin);d.vec3.copy(c.vector,b);return c}function B(a,b,c){var f=a.basis1,e=a.basis2;a=
a.origin;var k=d.vec3.scale(h.sv3d.get(),f,b.origin[0]),g=d.vec3.scale(h.sv3d.get(),e,b.origin[1]);d.vec3.add(c.origin,k,g);d.vec3.add(c.origin,c.origin,a);f=d.vec3.scale(h.sv3d.get(),f,b.direction[0]);b=d.vec3.scale(h.sv3d.get(),e,b.direction[1]);d.vec3.scale(c.vector,d.vec3.add(f,f,b),2);return c}function L(a,b,c,d){a=a.plane;g.fromVectorsAndPoint(a,b.direction,b.origin,c);g.fromVectorsAndPoint(c,a,b.origin,d)}Object.defineProperty(e,"__esModule",{value:!0});var y=Q.getLogger("esri.views.3d.support.geometryUtils.boundedPlane");
E=function(){return function(){this.plane=g.create();this.origin=d.vec3f64.create();this.basis1=d.vec3f64.create();this.basis2=d.vec3f64.create()}}();e.BoundedPlaneClass=E;e.create=t;e.wrap=function(a,b,c){var d=S.get();d.origin=a;d.basis1=b;d.basis2=c;d.plane=g.fromVectorsAndPoint(c,b,a,g.wrap(0,0,0,0));return d};e.copy=x;e.fromValues=G;e.elevate=H;e.setExtent=function(a,b,c){I(b,c);H(c,D(a,a.origin),c);return c};e.fromAABoundingRect=I;e.intersectRay=z;e.intersectRayClosestSilhouette=function(a,
b,c){if(z(a,b,c))return c;a=K(a,b,h.sv3d.get());d.vec3.add(c,b.origin,d.vec3.scale(h.sv3d.get(),b.direction,d.vec3.distance(b.origin,a)/d.vec3.length(b.direction)));return c};e.closestPointOnSilhouette=K;e.closestPoint=M;e.projectPoint=function(a,b,c){var f=g.projectPoint(a.plane,b,h.sv3d.get());b=q.projectPointClamp(O(a,a.basis1),f,-1,1,h.sv3d.get());f=q.projectPointClamp(O(a,a.basis2),f,-1,1,h.sv3d.get());d.vec3.subtract(c,d.vec3.add(h.sv3d.get(),b,f),a.origin);return c};e.projectPointLocal=N;e.distance2=
C;e.distance=function(a,b){return Math.sqrt(C(a,b))};e.distanceToSilhouette=function(a,b){for(var c=Number.NEGATIVE_INFINITY,d=0,e=A;d<e.length;d++){var g=B(a,e[d],v.get()),g=q.distance2(g,b);g>c&&(c=g)}return Math.sqrt(c)};e.extrusionContainsPoint=function(a,b){return g.isPointInside(a.plane,b)&&J(a,b)};e.axisAt=function(a,b,c,e){switch(c){case 0:d.vec3.copy(e,a.basis1);d.vec3.normalize(e,e);break;case 1:d.vec3.copy(e,a.basis2);d.vec3.normalize(e,e);break;case 2:d.vec3.copy(e,a.plane);break;default:P.neverReached(c)}return e};
e.altitudeAt=D;e.setAltitudeAt=function(a,b,c,e){var f=D(a,b);a=d.vec3.scale(h.sv3d.get(),a.plane,c-f);d.vec3.add(e,b,a);return e};e.transform=function(a,b,c){a!==c&&x(a,c);d.mat4.invert(l,b);d.mat4.transpose(l,l);d.vec3.transformMat4(c.basis1,a.basis1,l);d.vec3.transformMat4(c.basis2,a.basis2,l);d.vec3.transformMat4(c.plane,a.plane,l);d.vec3.transformMat4(c.origin,a.origin,b);g.setOffsetFromPoint(c.plane,c.origin,c.plane);return c};e.UP={plane:g.create(),origin:d.vec3f64.fromValues(0,0,0),basis1:d.vec3f64.fromValues(1,
0,0),basis2:d.vec3f64.fromValues(0,1,0)};var u=new w.ObjectStack(g.create),v=new w.ObjectStack(q.create),S=new w.ObjectStack(function(){return{origin:null,basis1:null,basis2:null,plane:null}}),A=[{origin:[-1,-1],direction:[1,0]},{origin:[1,-1],direction:[0,1]},{origin:[1,1],direction:[-1,0]},{origin:[-1,1],direction:[0,-1]}],l=d.mat4f64.create()});