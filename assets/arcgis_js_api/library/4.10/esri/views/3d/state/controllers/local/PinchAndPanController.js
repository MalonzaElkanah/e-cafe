// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.10/esri/copyright.txt for details.
//>>built
define("require exports ../../../../../core/tsSupport/extendsHelper ../../../../../core/libs/gl-matrix-2/gl-matrix ../../../camera/constraintUtils ../../../input/util ../InteractiveController ../momentum/PanPlanarMomentumController ../momentum/RotationMomentumController ../momentum/ZoomPlanarMomentumController ../../utils/navigationUtils ../../../support/geometryUtils ../../../support/mathUtils ../../../webgl-engine/lib/Camera ../../../../navigation/PanPlanarMomentumEstimator ../../../../navigation/RotationMomentumEstimator ../../../../navigation/ZoomMomentumEstimator".split(" "),
function(q,k,u,c,l,r,v,w,x,y,g,h,z,A,B,C,D){Object.defineProperty(k,"__esModule",{value:!0});var n;(function(c){c[c.Vertical=0]="Vertical";c[c.Horizontal=1]="Horizontal"})(n=k.PanMode||(k.PanMode={}));var t=c.vec3f64.fromValues(0,0,1),E=16/180*Math.PI;q=function(k){function m(a,p){var b=k.call(this)||this;b.view=a;b.intersectionHelper=p;b.rotationValueSmooth=new r.ExponentialFalloff(.05);b.scalingValueSmooth=new r.ExponentialFalloff(.05);b.planeHorizontal=h.plane.create();b.planeVertical=h.plane.create();
b.rotationMomentumEstimator=new C.RotationMomentumEstimator;b.panMomentumEstimator=new B.PanPlanarMomentumEstimator(300,12,.9);b.zoomMomentumEstimator=new D.ZoomMomentumEstimator;b.beginCenter=c.vec3f64.create();b.tmpPoints=[];b.beginCenterScreen=c.vec2f64.create();b.tmpCentroid3d=c.vec3f64.create();b.tmpCentroid2d=c.vec2f64.create();b.tmp2d=c.vec2f64.create();b.constraintOptions={selection:15,interactionType:0,interactionFactor:0,interactionStartCamera:new A,interactionDirection:null,tiltMode:0};
return b}u(m,k);m.prototype.begin=function(a){if(this.active){this.beginRadius=a.radius;this.pointerCount=a.pointers.size;this.beginAngle=a.angle;this.rotationValueSmooth.reset();this.scalingValueSmooth.reset();g.navPointToScreenPoint(this.beginCamera,a.center,this.beginCenterScreen);h.plane.fromNormalAndOffset(t,0,this.planeHorizontal);var p=c.vec3f64.create();this.intersectionHelper.intersectScreenFreePointFallback(this.beginCenterScreen,p);var b=c.vec3f64.create();c.vec3.negate(b,this.beginCamera.viewForward);
var d=c.vec3f64.create();c.vec3.copy(d,t);var f=c.vec3.dot(b,d);this.panMode=z.asin(0>f?-f:f)>=E?n.Horizontal:n.Vertical;h.plane.setOffsetFromPoint(this.planeHorizontal,p,this.planeHorizontal);0>h.plane.signedDistance(this.planeHorizontal,this.beginCamera.eye)&&h.plane.negate(this.planeHorizontal,this.planeHorizontal);this.panMode===n.Vertical?(c.vec3.scale(d,d,f),c.vec3.subtract(this.planeVertical,b,d),c.vec3.normalize(this.planeVertical,this.planeVertical),h.plane.setOffsetFromPoint(this.planeVertical,
p,this.planeVertical),this.computePlanePoints(a.pointers,this.planeVertical,this.beginCamera,this.tmpPoints)):this.computePlanePoints(a.pointers,this.planeHorizontal,this.beginCamera,this.tmpPoints);g.centroid(this.tmpPoints,this.beginCenter);this.constraintOptions.interactionStartCamera.copyFrom(this.beginCamera)}};m.prototype.update=function(a){if(this.active){this.currentCamera.copyFrom(this.beginCamera);var c=1<a.pointers.size,b=this.panMode===n.Horizontal?this.planeHorizontal:this.planeVertical,
d=this.beginCenter;if(c){var f=this.beginRadius/a.radius,e=.001875*Math.min(Math.max(a.radius,40),120);this.scalingValueSmooth.gain=e;this.scalingValueSmooth.update(f);g.applyZoomToPoint(this.currentCamera,d,this.scalingValueSmooth.value,this.view.state.constraints.minimumPoiDistance);this.zoomMomentumEstimator.add(this.scalingValueSmooth.value,.001*a.timestamp);this.constraintOptions.interactionType=1;this.constraintOptions.interactionFactor=l.pixelDistanceToInteractionFactor(Math.abs(a.radius-this.beginRadius));
l.applyAll(this.view,this.currentCamera,this.constraintOptions)}this.computePlanePoints(a.pointers,b,this.currentCamera,this.tmpPoints);g.centroid(this.tmpPoints,this.tmpCentroid3d);g.navPointToScreenPoint(this.currentCamera,a.center,this.tmpCentroid2d);g.applyPanPlanar(this.currentCamera,d,this.tmpCentroid3d);this.panMomentumEstimator.add(this.tmpCentroid2d,this.tmpCentroid3d,.001*a.timestamp);this.constraintOptions.interactionType=4;this.constraintOptions.interactionFactor=l.pixelDistanceToInteractionFactor(this.beginCenterScreen,
this.tmpCentroid2d);l.applyAll(this.view,this.currentCamera,this.constraintOptions);c&&(c=this.planeHorizontal,b=this.rotationValueSmooth.value,f=g.normalizeRotationDelta(a.angle-b),e=.00125*Math.min(Math.max(a.radius,40),120),this.rotationValueSmooth.gain=e,this.rotationValueSmooth.update(b+f),e=this.rotationValueSmooth.value-this.beginAngle,this.rotationMomentumEstimator.add(e,.001*a.timestamp),g.applyRotation(this.currentCamera,d,h.axisAngle.wrapAxisAngle(c,e)),this.constraintOptions.interactionType=
2,this.constraintOptions.interactionFactor=l.pixelDistanceToInteractionFactor(Math.abs(a.radius*e)),l.applyAll(this.view,this.currentCamera,this.constraintOptions));this.currentCamera.markViewDirty()}};m.prototype.end=function(a){a.pointers.size===this.pointerCount&&this.update(a);this.finishController();return(a=this.zoomMomentumEstimator.evaluateMomentum())?new y.ZoomPlanarMomentumController(this.view,a,this.beginCenter):(a=this.rotationMomentumEstimator.evaluateMomentum())?new x.RotationMomentumController(this.view,
a,this.beginCenter,this.planeHorizontal):(a=this.panMomentumEstimator.evaluateMomentum())?new w.PanPlanarMomentumController(this.view,a):null};m.prototype.computePlanePoints=function(a,h,b,d){d.length=a.size;var f=this.tmp2d,e=0;a.forEach(function(a){g.navPointToScreenPoint(b,a,f);void 0===d[e]&&(d[e]=c.vec3f64.create());g.intersectPlaneFromScreenPoint(h,b,f,d[e]);e+=1});return d};return m}(v.InteractiveController);k.PinchAndPanController=q});