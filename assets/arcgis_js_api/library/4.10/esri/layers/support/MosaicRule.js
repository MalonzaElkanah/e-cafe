// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.10/esri/copyright.txt for details.
//>>built
define("require exports ../../core/tsSupport/declareExtendsHelper ../../core/tsSupport/decorateHelper ../../core/JSONSupport ../../core/kebabDictionary ../../core/lang ../../core/accessorSupport/decorators ../../geometry/Point ./DimensionalDefinition".split(" "),function(q,r,l,c,m,e,f,b,n,p){var g=e({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),k=e({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",
esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});return function(e){function a(d){d=e.call(this)||this;d.ascending=!0;d.lockRasterIds=null;d.method=null;d.multidimensionalDefinition=null;d.objectIds=null;d.operation=null;d.sortField=null;d.sortValue=null;d.viewpoint=null;d.where=null;return d}l(a,e);h=a;a.prototype.writeAscending=function(d,a,b,c){d||(a[b]=!1)};a.prototype.readMethod=function(a,b){a=b.mosaicMethod||
b.defaultMosaicMethod;b=a.toLowerCase();switch(b){case "byattribute":a="attribute";break;case "lockraster":a="lock-raster";break;case "center":case "northwest":case "nadir":case "viewpoint":case "seamline":case "none":a=b}return k.fromJSON(a)};a.prototype.readOperation=function(a,b){return g.fromJSON(b.mosaicOperation||b.mosaicOperator&&b.mosaicOperator.toLowerCase())};a.prototype.clone=function(){return new h({ascending:this.ascending,lockRasterIds:f.clone(this.lockRasterIds),method:this.method,
multidimensionalDefinition:f.clone(this.multidimensionalDefinition),objectIds:f.clone(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:f.clone(this.viewpoint),where:this.where})};var h;c([b.property({type:Boolean})],a.prototype,"ascending",void 0);c([b.writer("ascending")],a.prototype,"writeAscending",null);c([b.property({type:[Number],json:{write:!0}})],a.prototype,"lockRasterIds",void 0);c([b.property({json:{write:{target:"mosaicMethod",writer:k.write}}})],
a.prototype,"method",void 0);c([b.reader("method",["mosaicMethod","defaultMosaicMethod"])],a.prototype,"readMethod",null);c([b.property({type:[p],json:{write:!0}})],a.prototype,"multidimensionalDefinition",void 0);c([b.property({json:{read:{source:"fids"},write:{target:"fids"}}})],a.prototype,"objectIds",void 0);c([b.property({json:{read:{reader:g.read},write:{target:"mosaicOperation",writer:g.write}}})],a.prototype,"operation",void 0);c([b.reader("operation",["mosaicOperation","mosaicOperator"])],
a.prototype,"readOperation",null);c([b.property({type:String,json:{write:!0}})],a.prototype,"sortField",void 0);c([b.property({json:{write:!0}})],a.prototype,"sortValue",void 0);c([b.property({type:n,json:{write:!0}})],a.prototype,"viewpoint",void 0);c([b.property({type:String,json:{write:!0}})],a.prototype,"where",void 0);return a=h=c([b.subclass("esri.layers.support.MosaicRule")],a)}(b.declared(m))});