// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.10/esri/copyright.txt for details.
//>>built
define("require exports ../../core/tsSupport/declareExtendsHelper ../../core/tsSupport/decorateHelper ../../core/tsSupport/paramHelper dojo/io-query ../../PopupTemplate ../../core/Collection ../../core/Error ../../core/JSONSupport ../../core/lang ../../core/Logger ../../core/accessorSupport/decorators ../../core/accessorSupport/ensureType ../../core/accessorSupport/write ../FeatureLayer ./commonProperties ./LabelClass ./layerSourceUtils ../../renderers/support/jsonUtils ../../renderers/support/typeUtils ../../symbols/Symbol3D ../../tasks/QueryTask ../../tasks/support/Query".split(" "),
function(I,J,u,e,v,w,x,y,n,z,h,A,c,p,q,B,r,C,g,D,E,F,G,t){var k=A.getLogger("esri.layers.support.Sublayer"),H=0;return function(m){function b(){var a=null!==m&&m.apply(this,arguments)||this;a._sublayersHandles=null;return a}u(b,m);l=b;Object.defineProperty(b.prototype,"definitionExpression",{get:function(){return this._get("definitionExpression")},set:function(a){this._setAndNotifyLayer("definitionExpression",a)},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"id",{get:function(){var a=
this._get("id");return null==a?H++:a},set:function(a){this._get("id")!==a&&(!1===this.get("layer.capabilities.exportMap.supportsDynamicLayers")?this._logLockedError("id"):this._set("id",a))},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"labelingInfo",{get:function(){return this._get("labelingInfo")},set:function(a){this._setAndNotifyLayer("labelingInfo",a)},enumerable:!0,configurable:!0});b.prototype.writeLabelingInfo=function(a,b,f,d){(!d||d.writeAsDynamic)&&a&&a.length&&(b.layerDefinition=
{drawingInfo:{labelingInfo:a.map(function(a){return a.write({},d)})}})};Object.defineProperty(b.prototype,"labelsVisible",{get:function(){return this._get("labelsVisible")},set:function(a){this._setAndNotifyLayer("labelsVisible",a)},enumerable:!0,configurable:!0});b.prototype.writeLabelsVisible=function(a,b,f,d){if(!d||d.writeAsDynamic)b.showLabels=a};Object.defineProperty(b.prototype,"layer",{set:function(a){this._set("layer",a);this.sublayers&&this.sublayers.forEach(function(b){return b.layer=a})},
enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"legendEnabled",{get:function(){return this._get("legendEnabled")},set:function(a){this._set("legendEnabled",a)},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"minScale",{get:function(){return this._get("minScale")},set:function(a){this._setAndNotifyLayer("minScale",a)},enumerable:!0,configurable:!0});b.prototype.readMinScale=function(a,b){return b.minScale||b.layerDefinition&&b.layerDefinition.minScale||0};b.prototype.writeMinScale=
function(a,b,f,d){if(d&&d.writeOverridesOnly&&(f=d&&d.serviceSublayer)&&f.minScale===a&&f.maxScale===this.maxScale)return;b.minScale=a};Object.defineProperty(b.prototype,"maxScale",{get:function(){return this._get("maxScale")},set:function(a){this._setAndNotifyLayer("maxScale",a)},enumerable:!0,configurable:!0});b.prototype.readMaxScale=function(a,b){return b.maxScale||b.layerDefinition&&b.layerDefinition.maxScale||0};b.prototype.writeMaxScale=function(a,b,f,d){if(d&&d.writeOverridesOnly&&(f=d&&d.serviceSublayer)&&
f.maxScale===a&&f.minScale===this.minScale)return;b.maxScale=a};Object.defineProperty(b.prototype,"opacity",{get:function(){return this._get("opacity")},set:function(a){this._setAndNotifyLayer("opacity",a)},enumerable:!0,configurable:!0});b.prototype.readOpacity=function(a,b){a=b.layerDefinition;return 1-.01*(null!=a.transparency?a.transparency:a.drawingInfo.transparency)};b.prototype.writeOpacity=function(a,b,f,d){if(!d||d.writeAsDynamic)b.layerDefinition={drawingInfo:{transparency:100-100*a}}};
b.prototype.writeParent=function(a,b,f,d){d&&d.writeOverridesOnly||(b.parentLayerId=this.parent&&this.parent!==this.layer?this.parent.id:-1)};Object.defineProperty(b.prototype,"popupEnabled",{get:function(){return this._get("popupEnabled")},set:function(a){this._set("popupEnabled",a)},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"popupTemplate",{get:function(){return this._get("popupTemplate")},set:function(a){this._set("popupTemplate",a)},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,
"renderer",{get:function(){return this._get("renderer")},set:function(a){if(a)for(var b=0,f=a.getSymbols();b<f.length;b++)if(f[b].isInstanceOf(F)){k.warn("Sublayer renderer should use 2D symbols");break}this._setAndNotifyLayer("renderer",a)},enumerable:!0,configurable:!0});b.prototype.readRenderer=function(a,b,f){if(a=b.layerDefinition.drawingInfo.renderer||void 0)(a=D.read(a,b,f)||void 0)||k.error("Failed to create renderer",{rendererDefinition:b.drawingInfo.renderer,layer:this,context:f});return a};
b.prototype.writeRenderer=function(a,b,f,d){if(!d||d.writeAsDynamic)b.layerDefinition={drawingInfo:{renderer:a.toJSON()}}};Object.defineProperty(b.prototype,"source",{get:function(){return this._get("source")||{mapLayerId:this.id,type:g.MAPLAYER}},set:function(a){this._setAndNotifyLayer("source",a)},enumerable:!0,configurable:!0});b.prototype.writeSource=function(a,b,f,d){d&&!d.writeAsDynamic&&d.writeOverridesOnly||(b.layerDefinition={source:g.sourceToJSON(a)})};Object.defineProperty(b.prototype,
"sublayers",{set:function(a){this._handleSublayersChange(a,this._get("sublayers"));this._set("sublayers",a)},enumerable:!0,configurable:!0});b.prototype.castSublayers=function(a){return p.default(y.ofType(l),a)};b.prototype.writeSublayers=function(a,b,f,d){d&&d.writeOverridesOnly||(b[f]=this.get("sublayers.length")?this.sublayers.map(function(a){return a.id}).toArray().reverse():null)};Object.defineProperty(b.prototype,"title",{get:function(){return this._get("title")},set:function(a){this._set("title",
a)},enumerable:!0,configurable:!0});b.prototype.writeTitle=function(a,b,f,d){if(d&&d.writeOverridesOnly&&(d=d&&d.serviceSublayer)&&d.title===a)return;b[f]=a};Object.defineProperty(b.prototype,"url",{get:function(){var a=this.layer,b=this.source;if(!a)return null;if(g.isMapLayerSource(b))return a.parsedUrl.path+"/"+b.mapLayerId;b={layer:JSON.stringify({source:g.sourceToJSON(this.source)})};return a.parsedUrl.path+"/dynamicLayer?"+w.objectToQuery(b)},set:function(a){a?this._override("url",a):this._clearOverride("url")},
enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"visible",{get:function(){return this._get("visible")},set:function(a){this._setAndNotifyLayer("visible",a)},enumerable:!0,configurable:!0});b.prototype.writeVisible=function(a,b,f,d){if(d&&d.writeOverridesOnly&&(d=d&&d.serviceSublayer)&&d.visible===a)return;b[f]=a};b.prototype.clone=function(){var a=new l;this.hasOwnProperty("definitionExpression")&&(a.definitionExpression=this.definitionExpression);this.hasOwnProperty("id")&&(a.id=
this.id);this.hasOwnProperty("labelingInfo")&&(a.labelingInfo=h.clone(this.labelingInfo));this.hasOwnProperty("labelsVisible")&&(a.labelsVisible=this.labelsVisible);this.hasOwnProperty("legendEnabled")&&(a.legendEnabled=this.legendEnabled);this.hasOwnProperty("visible")&&(a.visible=this.visible);this.hasOwnProperty("layer")&&(a.layer=this.layer);this.hasOwnProperty("minScale")&&(a.minScale=this.minScale);this.hasOwnProperty("maxScale")&&(a.maxScale=this.maxScale);this.hasOwnProperty("opacity")&&(a.opacity=
this.opacity);this.hasOwnProperty("parent")&&(a.parent=this.parent);this.hasOwnProperty("popupEnabled")&&(a.popupEnabled=this.popupEnabled);this.hasOwnProperty("popupTemplate")&&(a.popupTemplate=this.popupTemplate?this.popupTemplate.clone():this.popupTemplate);this.hasOwnProperty("renderer")&&(a.renderer=this.renderer?this.renderer.clone():this.renderer);this.hasOwnProperty("source")&&(a.source=h.clone(this.source));this.hasOwnProperty("sublayers")&&(a.sublayers=this.sublayers?this.sublayers.clone():
this.sublayers);this.hasOwnProperty("title")&&(a.title=this.title);return a};b.prototype.createQuery=function(){return new t({returnGeometry:!0,where:this.definitionExpression||"1\x3d1"})};b.prototype.createFeatureLayer=function(){if(this.hasOwnProperty("sublayers"))return null;var a=this.layer&&this.layer.parsedUrl,b=this.source,f=null;a&&(f=g.isMapLayerSource(b)?a.path+"/"+b.mapLayerId:a.path+"/dynamicLayer");a=new B({url:f});this.hasOwnProperty("definitionExpression")&&(a.definitionExpression=
this.definitionExpression);this.hasOwnProperty("labelingInfo")&&(a.labelingInfo=h.clone(this.labelingInfo));this.hasOwnProperty("labelsVisible")&&(a.labelsVisible=this.labelsVisible);this.hasOwnProperty("legendEnabled")&&(a.legendEnabled=this.legendEnabled);this.hasOwnProperty("visible")&&(a.visible=this.visible);this.hasOwnProperty("minScale")&&(a.minScale=this.minScale);this.hasOwnProperty("maxScale")&&(a.maxScale=this.maxScale);this.hasOwnProperty("opacity")&&(a.opacity=this.opacity);this.hasOwnProperty("popupTemplate")&&
(a.popupTemplate=this.popupTemplate?this.popupTemplate.clone():this.popupTemplate);this.hasOwnProperty("renderer")&&(a.renderer=this.renderer?this.renderer.clone():this.renderer);this.hasOwnProperty("source")&&g.isDataLayerSource(this.source)&&(a.dynamicDataSource=h.clone(this.source));this.hasOwnProperty("title")&&(a.title=this.title);return a};b.prototype.queryFeatures=function(a){var b=this;void 0===a&&(a=this.createQuery());return(new G({url:this.url})).execute(a).then(function(a){a&&a.features&&
a.features.forEach(function(a){a.sourceLayer=b});return a})};b.prototype.toExportImageJSON=function(){var a={id:this.id,source:g.sourceToJSON(this.source)};this.definitionExpression&&(a.definitionExpression=this.definitionExpression);if(this.renderer||this.labelingInfo||null!=this.opacity||null!=this.labelsVisible){var b=a.drawingInfo={};this.renderer&&(b.renderer=this.renderer.toJSON());null!=this.labelsVisible&&(b.showLabels=this.labelsVisible);!1!==this.labelsVisible&&this.labelingInfo&&(b.labelingInfo=
this.labelingInfo.map(function(a){return a.write({},{origin:"service"})}),b.showLabels=!0);null!=this.opacity&&(b.transparency=100-100*this.opacity)}return a};b.prototype._setAndNotifyLayer=function(a,b){var f=this.layer,d=this._get(a),c;switch(a){case "definitionExpression":c="supportsSublayerDefinitionExpression";case "minScale":case "maxScale":case "visible":c="supportsSublayerVisibility";break;case "labelingInfo":case "labelsVisible":case "opacity":case "renderer":case "source":c="supportsDynamicLayers"}c&&
!1===this.get("layer.capabilities.exportMap."+c)?this._logLockedError(a):(this._set(a,b),d!==b&&f&&f.emit&&f.emit("sublayer-update",{propertyName:a}))};b.prototype._handleSublayersChange=function(a,b){var c=this;b&&(b.forEach(function(a){a.parent=null;a.layer=null}),this._sublayersHandles.forEach(function(a){return a.remove()}),this._sublayersHandles=null);a&&(a.forEach(function(a){a.parent=c;a.layer=c.layer}),this._sublayersHandles=[a.on("after-add",function(a){a=a.item;a.parent=c;a.layer=c.layer}),
a.on("after-remove",function(a){a=a.item;a.parent=null;a.layer=null}),a.on("before-changes",function(a){var b=c.get("layer.capabilities.exportMap.supportsSublayersChanges");null==b||b||(k.error(new n("sublayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{layer:c})),a.preventDefault())})])};b.prototype._logLockedError=function(a){k.error(new n("sublayer:locked","Property '"+a+"' can't be changed on Sublayer from the layer '"+this.layer.id+"'",{sublayer:this,
layer:this.layer}))};var l;e([c.property({type:String,value:null,json:{read:{source:"layerDefinition.definitionExpression"},write:{target:"layerDefinition.definitionExpression"}}})],b.prototype,"definitionExpression",null);e([c.property({type:Number,json:{write:{ignoreOrigin:!0}}})],b.prototype,"id",null);e([c.property({value:null,type:[C],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo"},write:{target:"layerDefinition.drawingInfo.labelingInfo"}}})],b.prototype,"labelingInfo",null);e([c.writer("labelingInfo")],
b.prototype,"writeLabelingInfo",null);e([c.property({type:Boolean,json:{read:{source:"showLabels"},write:{target:"showLabels"}}})],b.prototype,"labelsVisible",null);e([c.writer("labelsVisible")],b.prototype,"writeLabelsVisible",null);e([c.property({value:null})],b.prototype,"layer",null);e([c.property(r.legendEnabled)],b.prototype,"legendEnabled",null);e([c.property({type:Number,value:0,json:{write:{overridePolicy:function(a,b,c){if(q.willPropertyWrite(this,"maxScale",{},c))return{ignoreOrigin:!0}}}}})],
b.prototype,"minScale",null);e([c.reader("portal-item","minScale",["minScale","layerDefinition.minScale"])],b.prototype,"readMinScale",null);e([c.writer("minScale")],b.prototype,"writeMinScale",null);e([c.property({type:Number,value:0,json:{write:{overridePolicy:function(a,b,c){if(q.willPropertyWrite(this,"minScale",{},c))return{ignoreOrigin:!0}}}}})],b.prototype,"maxScale",null);e([c.reader("portal-item","maxScale",["maxScale","layerDefinition.maxScale"])],b.prototype,"readMaxScale",null);e([c.writer("maxScale")],
b.prototype,"writeMaxScale",null);e([c.property({type:Number,json:{write:{target:"layerDefinition.drawingInfo.transparency"}}})],b.prototype,"opacity",null);e([c.reader("opacity",["layerDefinition.drawingInfo.transparency","layerDefinition.transparency"])],b.prototype,"readOpacity",null);e([c.writer("opacity")],b.prototype,"writeOpacity",null);e([c.property({json:{type:Number,write:{target:"parentLayerId",allowNull:!0}}})],b.prototype,"parent",void 0);e([c.writer("parent")],b.prototype,"writeParent",
null);e([c.property(r.popupEnabled)],b.prototype,"popupEnabled",null);e([c.property({value:null,type:x,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],b.prototype,"popupTemplate",null);e([c.property({types:E.types,value:null,json:{write:{target:"layerDefinition.drawingInfo.renderer"}}})],b.prototype,"renderer",null);e([c.reader("renderer",["layerDefinition.drawingInfo.renderer"])],b.prototype,"readRenderer",null);e([c.writer("renderer")],b.prototype,"writeRenderer",null);e([c.property({cast:g.castSource,
json:{read:{source:"layerDefinition.source",reader:g.sourceFromJSON},write:{target:"layerDefinition.source"}}})],b.prototype,"source",null);e([c.writer("source")],b.prototype,"writeSource",null);e([c.property({value:null,json:{type:[p.Integer],write:{target:"subLayerIds",allowNull:!0}}})],b.prototype,"sublayers",null);e([c.cast("sublayers")],b.prototype,"castSublayers",null);e([c.writer("sublayers")],b.prototype,"writeSublayers",null);e([c.property({type:String,value:null,json:{read:{source:"name"},
write:{target:"name",allowNull:!0,ignoreOrigin:!0}}})],b.prototype,"title",null);e([c.writer("title")],b.prototype,"writeTitle",null);e([c.property({type:String,dependsOn:["layer","source"],json:{read:{source:"layerUrl"},write:{target:"layerUrl",overridePolicy:function(){return{enabled:this._isOverridden("url")}}}}})],b.prototype,"url",null);e([c.property({type:Boolean,value:!0,json:{read:{source:"defaultVisibility"},write:{target:"defaultVisibility"}}})],b.prototype,"visible",null);e([c.writer("visible")],
b.prototype,"writeVisible",null);e([v(0,c.cast(t))],b.prototype,"queryFeatures",null);return b=l=e([c.subclass("esri.layers.support.Sublayer")],b)}(c.declared(z))});