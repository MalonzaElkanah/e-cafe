// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.10/esri/copyright.txt for details.
//>>built
define("require exports ../../../core/tsSupport/declareExtendsHelper ../../../core/tsSupport/decorateHelper ../../../core/tsSupport/assignHelper ../../../core/Accessor ../../../core/Collection ../../../core/compilerUtils ../../../core/Error ../../../core/Handles ../../../core/lang ../../../core/Logger ../../../core/Promise ../../../core/promiseUtils ../../../core/watchUtils ../../../core/accessorSupport/decorators ../../support/arcgisLayerUrl ../../../portal/support/geometryServiceUtils ../../../tasks/support/StatisticDefinition ../../../views/3d/layers/graphics/Graphics3DVerticalScale ../../../views/3d/layers/support/FeatureTileFetcher3D ../../../views/3d/layers/support/FeatureTileFetcher3DDebugger ../../../views/3d/support/debugFlags".split(" "),
function(f,G,r,d,H,t,m,n,u,v,w,x,y,k,h,c,z,A,B,C,D,E,F){var p=x.getLogger("esri.layers.graphics.controllers.FeatureTileController3D");f=function(f){function b(a){a=f.call(this)||this;a.type="feature-tile-3d";a.serviceDataExtent=null;a.serviceDataCount=g.constants.NO_SERVICE_DATA_COUNT;a.vertexLimitExceeded=!1;a.displayFeatureLimit=null;a.suspended=!1;a.tileFetcher=null;a.handles=new v;a.fetchDataInfoPromise=null;return a}r(b,f);g=b;Object.defineProperty(b.prototype,"extent",{set:function(a){if(a&&
!a.spatialReference.equals(this.layerView.view.spatialReference))p.error("#extent\x3d","extent needs to be in the same spatial reference as the view");else{var e=this._get("extent");e===a||e&&a&&e.equals(a)||(a=a?a.clone():null,this._set("extent",a))}},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"updating",{get:function(){return!!(this.tileFetcher&&this.tileFetcher.updating||this.fetchDataInfoPromise)},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"updatingTotal",
{get:function(){return this.updating&&this.tileFetcher?this.tileFetcher.updatingTotal:0},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"updatingRemaining",{get:function(){return this.updating&&this.tileFetcher?this.tileFetcher.updatingRemaining:0},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"expectedFeatureDiff",{get:function(){return this.updating&&this.tileFetcher?this.tileFetcher.expectedFeatureDiff:0},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,
"memoryForUnusedFeatures",{get:function(){return this.tileFetcher?this.tileFetcher.memoryForUnusedFeatures:0},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"maximumNumberOfFeaturesExceeded",{get:function(){return!(!this.tileFetcher||!this.tileFetcher.maximumNumberOfFeaturesExceeded)},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"filteredDataExtent",{get:function(){return this.extent},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"maximumNumberOfFeatures",
{get:function(){return this.displayFeatureLimit?this.displayFeatureLimit.maximumNumberOfFeatures:0},set:function(a){null!=a?this._override("maximumNumberOfFeatures",a):this._clearOverride("maximumNumberOfFeatures")},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"hasMaximumNumberOfFeaturesOverride",{get:function(){return this._isOverridden("maximumNumberOfFeatures")},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"mode",{get:function(){if(this.serviceDataCount===
g.constants.NO_SERVICE_DATA_COUNT||this.vertexLimitExceeded)return"tiles";var a=this.layerView,e=a.layer,a=(a=(a=a.view)&&a.featureTiles)&&a.tilingScheme;return e&&e.minScale&&this.serviceDataExtent&&a&&(e=this.approximateExtentSizeAtScale(e.minScale,a),(this.serviceDataExtent.width/e+this.serviceDataExtent.height/e)/2>g.constants.MAX_SNAPSHOT_MIN_SCALE_FACTOR)?"tiles":!this.maximumNumberOfFeatures||this.serviceDataCount<=this.maximumNumberOfFeatures?"snapshot":"tiles"},enumerable:!0,configurable:!0});
Object.defineProperty(b.prototype,"maxTotalSnapshotVertices",{get:function(){var a=this._get("maxTotalSnapshotVertices")||0;return Math.max(a,"snapshot"===this.mode&&this.tileFetcher&&this.tileFetcher.totalVertices||0)},enumerable:!0,configurable:!0});b.prototype.approximateExtentSizeAtScale=function(a,e){var b=this.layerView.view,c=e.levels[0];return(c.tileSize[0]/(c.scale/a)+c.tileSize[1]/(c.scale/a))/2*Math.ceil((b.width/e.pixelSize[0]+b.height/e.pixelSize[1])/2)};Object.defineProperty(b.prototype,
"tileDescriptors",{get:function(){return"snapshot"===this.mode?new m([{id:"dummy-tile-full-extent",lij:[0,0,0]}]):this.layerView.view.featureTiles?this.layerView.view.featureTiles.tiles:new m},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"test",{get:function(){return{fetchDataInfoPromise:this.fetchDataInfoPromise}},enumerable:!0,configurable:!0});b.prototype.initialize=function(){var a=this;this.handles.add(this.watch("vertexLimitInfo",function(){return a.updateVertexLimitExceeded()}));
var b=k.resolve().then(function(){return a.verifyCapabilities()}).then(function(){return a.fetchServiceDataInfo()}).then(function(){return a.initializeTileFetcher()});this.addResolvingPromise(b)};b.prototype.verifyCapabilities=function(){var a=this.layerView.layer;if(!a.get("capabilities.operations.supportsQuery"))throw new u("graphicscontroller:query-capability-required","Service requires query capabilities to be used as a feature layer",{layer:a});};b.prototype.destroy=function(){this.cancelFetchServiceDataInfo();
this.tileFetcher&&(this.tileFetcher.destroy(),this.tileFetcher=null);this.handles&&(this.handles.destroy(),this.handles=null)};b.prototype.suspend=function(){this.suspended||(this.suspended=!0,this.tileFetcher&&this.tileFetcher.suspend())};b.prototype.resume=function(){this.suspended&&(this.suspended=!1,this.tileFetcher&&this.tileFetcher.resume())};b.prototype.refresh=function(){var a=this,b=function(){a.tileFetcher&&a.tileFetcher.filtersChanged()};this.fetchServiceDataInfo().then(b,b)};b.prototype.initializeTileFetcher=
function(){var a=this,b=this.layerView.view;this.handles.add(h.whenOnce(b.featureTiles,"tilingScheme",function(){a.handles.add(b.featureTiles.addClient());var e=a.layerView,c=a.tileDescriptors,d=e.layer,g=new C({sourceSpatialReference:d.spatialReference,destSpatialReference:b.spatialReference});a.tileFetcher=new D.FeatureTileFetcher3D({layerView:e,filterExtent:a.filteredDataExtent,tilingScheme:b.featureTiles.tilingScheme,tileDescriptors:c,features:a.graphics,verticalScale:g,viewingMode:b.viewingMode});
a.suspended?a.tileFetcher.suspend():a.tileFetcher.resume();a.handles.add([d.watch("definitionExpression",function(){return a.definitionExpressionChanged()}),d.watch("outFields",function(b,e){return a.attributesChanged(e,b)}),d.on("apply-edits",function(b){return a.applyEdits(b)}),a.watch("filteredDataExtent",function(b){return a.tileFetcher.filterExtent=b},!0),a.watch("tileDescriptors",function(b){return a.tileFetcher.tileDescriptors=b},!0),h.init(a,"maximumNumberOfFeatures",function(b){a.tileFetcher.maximumNumberOfFeatures=
b;a.tileFetcher.useTileCount=a.serviceDataCount>b},!0),h.init(a,"serviceDataCount",function(b){return a.tileFetcher.useTileCount=b>a.maximumNumberOfFeatures},!0),h.init(F,"FEATURE_TILE_FETCH_SHOW_TILES",function(e){e&&a.tileFetcher&&!a.tileFetcher.debugger?(a.tileFetcher.debugger=new E.FeatureTileFetcher3DDebugger(a.tileFetcher,b.featureTiles.tilingScheme.toTileInfo(),b),a.tileFetcher.debugger.update()):!e&&a.tileFetcher&&a.tileFetcher.debugger&&(a.tileFetcher.debugger.destroy(),a.tileFetcher.debugger=
null)})]);a.supportsExceedsLimitQuery||a.watch("maxTotalSnapshotVertices",function(){return a.updateVertexLimitExceeded()})}))};b.prototype.definitionExpressionChanged=function(){this._set("maxTotalSnapshotVertices",0);this.notifyChange("maxTotalSnapshotVertices");this.refresh()};b.prototype.applyEdits=function(a){var b=this;this.tileFetcher.applyEdits(a).then(function(a){a&&(a.deletedFeatures.length||a.updatedFeatures.length||a.addedFeatures.length)&&b.updateServiceDataExtent()})};b.prototype.attributesChanged=
function(a,b){if(!a||-1===a.indexOf("*"))if(a&&b){for(var e=new Set,c=0;c<a.length;c++){var d=a[c];e.add(d)}for(a=0;a<b.length;a++)if(d=b[a],!e.has(d)){this.refresh();break}}else this.refresh()};b.prototype.createVertexLimitExceededQuery=function(a){var b=this.layerView.layer.createQuery();b.outStatistics=[new B({statisticType:"exceedslimit",maxVertexCount:a,outStatisticFieldName:"exceedslimit",maxPointCount:1E8,maxRecordCount:1E8})];return b};b.prototype.createDataInfoQuery=function(){var a=this.layerView.layer,
b=a.createQuery();b.outSpatialReference=this.layerView.view.spatialReference;a.capabilities.query.supportsResultType&&(b.resultType="tile");return b};b.prototype.fullExtentIsAccurate=function(){var a=this.layerView.layer;if(a.definitionExpression)return!1;switch(a.type){case "feature":case "stream":return z.isHostedAgolService(a.url);case "csv":return!0;default:n.neverReached(a)}};b.prototype.updateServiceDataExtent=function(){var a=this,b=this.layerView,c=b.layer,d=c.capabilities.query.supportsExtent,
f=w.clone(b.fullExtentInLocalViewSpatialReference),q=c.fullExtent,k=this.fullExtentIsAccurate(),h=this.serviceDataCount,l=null;!(d&&h<=g.constants.MAX_FEATURE_COUNT_FOR_EXTENT)||f&&k?f?this._set("serviceDataExtent",f):q?l=A.projectGeometry(q,b.view.spatialReference,c.portalItem).then(function(b){a._set("serviceDataExtent",b)}):this._set("serviceDataExtent",null):(b=this.createDataInfoQuery(),l=c.queryExtent(b,{timeout:g.constants.QUERY_EXTENT_TIMEOUT}).then(function(b){a._set("serviceDataExtent",
b.extent)}));l&&(l=l.catch(function(b){b&&"cancel"===b.dojoType||a._set("serviceDataExtent",f)}));return l};b.prototype.updateServiceDataCount=function(){var a=this;return this.layerView.layer.queryFeatureCount(this.createDataInfoQuery(),{timeout:g.constants.QUERY_STATISTICS_TIMEOUT}).then(function(b){a._set("serviceDataCount",b)}).catch(function(b){if(b&&"cancel"===b.dojoType)throw b;a._set("serviceDataCount",g.constants.NO_SERVICE_DATA_COUNT)})};Object.defineProperty(b.prototype,"vertexLimitInfo",
{get:function(){if(!this.displayFeatureLimit||!this.displayFeatureLimit.maximumSymbolComplexity)return null;var a=this.displayFeatureLimit,b=a.maximumSymbolComplexity,a=a.maximumTotalNumberOfPrimitives,c=b.primitivesPerCoordinate,b=b.primitivesPerFeature,d=this._get("vertexLimitInfo");return d&&d.maximumTotalNumberOfPrimitives===a&&d.primitivesPerCoordinate===c&&d.primitivesPerFeature===b?d:{primitivesPerCoordinate:c,primitivesPerFeature:b,maximumTotalNumberOfPrimitives:a}},enumerable:!0,configurable:!0});
Object.defineProperty(b.prototype,"supportsExceedsLimitQuery",{get:function(){var a=this.layerView.layer;return a.capabilities&&a.capabilities.operations&&a.capabilities.operations.supportsExceedsLimitStatistics},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"minimumNumberOfVerticesForGeometry",{get:function(){var a=this.layerView.layer.geometryType;switch(a){case "point":return 1;case "multipoint":return 1;case "polygon":return 4;case "polyline":return 2;case "multipatch":case "mesh":return 3;
default:return n.neverReached(a),0}},enumerable:!0,configurable:!0});b.prototype.updateVertexLimitExceeded=function(a){var b=this,c=this.layerView.layer,d=this.supportsExceedsLimitQuery;if(!(this.vertexLimitInfo&&0>=this.vertexLimitInfo.primitivesPerFeature))return this._set("vertexLimitExceeded",!1),k.resolve();var f=this.vertexLimitInfo,h=f.primitivesPerFeature,m=f.primitivesPerCoordinate,n=f.maximumTotalNumberOfPrimitives;return k.when(0!==h?a:null).then(function(){var a=b.serviceDataCount,e,f=
a!==g.constants.NO_SERVICE_DATA_COUNT;e=f?Math.ceil((n-a*h)/(m||1)):Math.ceil(n/(m||1));if(f&&b.minimumNumberOfVerticesForGeometry*a>e)b._set("vertexLimitExceeded",!0);else{if(d)return c.queryFeatures(b.createVertexLimitExceededQuery(e),{timeout:g.constants.QUERY_STATISTICS_TIMEOUT}).then(function(a){(a=a.features[0])&&a.attributes?b._set("vertexLimitExceeded",!!a.attributes.exceedslimit):b._set("vertexLimitExceeded",!1)}).catch(function(a){if(a&&"cancel"===a.dojoType)throw a;b._set("vertexLimitExceeded",
!1)});b._set("vertexLimitExceeded",b.maxTotalSnapshotVertices>e)}})};b.prototype.fetchServiceDataInfo=function(){var a=this;this.cancelFetchServiceDataInfo();var b=k.eachAlways([this.updateServiceDataCount(),this.updateVertexLimitExceeded()]),c=b.then(function(){return a.updateServiceDataExtent()}).catch(function(a){a&&"AbortError"===a.name||p.error("#fetchServiceDataInfo()",a)}).then(function(){c===a.fetchDataInfoPromise&&(a.fetchDataInfoPromise=null)});c.isFulfilled()||(this.fetchDataInfoPromise=
c);return b.catch(function(){})};b.prototype.cancelFetchServiceDataInfo=function(){var a=this.fetchDataInfoPromise;a&&(this.fetchDataInfoPromise=null,a.cancel())};Object.defineProperty(b.prototype,"debug",{get:function(){return{storedFeatures:this.tileFetcher?this.tileFetcher.storedFeatures:0,totalFeatures:this.tileFetcher?this.tileFetcher.totalFeatures:0,totalVertices:this.tileFetcher?this.tileFetcher.totalVertices:0}},enumerable:!0,configurable:!0});var g;d([c.property({readOnly:!0})],b.prototype,
"type",void 0);d([c.property({constructOnly:!0})],b.prototype,"graphics",void 0);d([c.property({constructOnly:!0})],b.prototype,"layerView",void 0);d([c.property()],b.prototype,"extent",null);d([c.property({dependsOn:["tileFetcher.updating","fetchDataInfoPromise"]})],b.prototype,"updating",null);d([c.property({dependsOn:["updating","tileFetcher.updatingTotal"]})],b.prototype,"updatingTotal",null);d([c.property({dependsOn:["updating","tileFetcher.updatingRemaining"]})],b.prototype,"updatingRemaining",
null);d([c.property({dependsOn:["updating","tileFetcher.expectedFeatureDiff"]})],b.prototype,"expectedFeatureDiff",null);d([c.property({dependsOn:["tileFetcher.memoryForUnusedFeatures"]})],b.prototype,"memoryForUnusedFeatures",null);d([c.property({dependsOn:["tileFetcher.maximumNumberOfFeaturesExceeded"]})],b.prototype,"maximumNumberOfFeaturesExceeded",null);d([c.property({readOnly:!0})],b.prototype,"serviceDataExtent",void 0);d([c.property({readOnly:!0})],b.prototype,"serviceDataCount",void 0);d([c.property({readOnly:!0})],
b.prototype,"vertexLimitExceeded",void 0);d([c.property({readOnly:!0,dependsOn:["extent"]})],b.prototype,"filteredDataExtent",null);d([c.property()],b.prototype,"displayFeatureLimit",void 0);d([c.property({type:Number,dependsOn:["displayFeatureLimit"]})],b.prototype,"maximumNumberOfFeatures",null);d([c.property({readOnly:!0,dependsOn:"serviceDataCount displayFeatureLimit maximumNumberOfFeatures vertexLimitExceeded serviceDataExtent layerView.layer.minScale layerView.view.featureTiles.tilingScheme".split(" ")})],
b.prototype,"mode",null);d([c.property({readOnly:!0,dependsOn:["mode","tileFetcher.totalVertices"]})],b.prototype,"maxTotalSnapshotVertices",null);d([c.property({readOnly:!0,dependsOn:["mode"]})],b.prototype,"tileDescriptors",null);d([c.property()],b.prototype,"tileFetcher",void 0);d([c.property()],b.prototype,"fetchDataInfoPromise",void 0);d([c.property({readOnly:!0,dependsOn:["displayFeatureLimit"]})],b.prototype,"vertexLimitInfo",null);return b=g=d([c.subclass("esri.layers.graphics.controllers.FeatureTileController3D")],
b)}(c.declared(t,y));(function(c){(function(b){b.NO_SERVICE_DATA_COUNT=Infinity;b.MAX_SNAPSHOT_MIN_SCALE_FACTOR=5;b.reset=function(){b.MAX_FEATURE_COUNT_FOR_EXTENT=1E4;b.QUERY_STATISTICS_TIMEOUT=12E3;b.QUERY_EXTENT_TIMEOUT=1E4}})(c.constants||(c.constants={}))})(f||(f={}));f.constants.reset();return f});