// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.10/esri/copyright.txt for details.
//>>built
define("require exports ../../../core/tsSupport/declareExtendsHelper ../../../core/tsSupport/decorateHelper ../../../core/tsSupport/assignHelper dojo/io-query ../../../request ../../../core/Accessor ../../../core/Error ../../../core/Loadable ../../../core/promiseUtils ../../../core/accessorSupport/decorators ../../../tasks/QueryTask ../../../tasks/operations/queryAttachments".split(" "),function(p,q,t,g,l,u,h,v,r,w,m,e,x,y){Object.defineProperty(q,"__esModule",{value:!0});p=function(k){function a(){var b=
null!==k&&k.apply(this,arguments)||this;b.type="feature-layer";return b}t(a,k);a.prototype.load=function(){this.addResolvingPromise(this._fetchService());return this.when()};Object.defineProperty(a.prototype,"queryTask",{get:function(){var b=this.layer,c=b.parsedUrl,d=b.gdbVersion;return new x({url:null!=b.dynamicDataSource?c.path+"?"+u.objectToQuery(c.query):c.path,gdbVersion:d})},enumerable:!0,configurable:!0});a.prototype.addAttachment=function(b,c){var d=this;return this.load().then(function(){var a=
b.attributes[d.layer.objectIdField];return h(d.layer.parsedUrl.path+"/"+a+"/addAttachment",{body:c,query:l({f:"json"},d.layer.parsedUrl.query,{token:d.layer.token}),responseType:"json"}).then(function(b){return d._createFeatureEditResult(b.data.addAttachmentResult)}).catch(function(b){return m.reject(d._createAttachmentErrorResult(a,b))})})};a.prototype.updateAttachment=function(b,c,d){var a=this;return this.load().then(function(){var f=b.attributes[a.layer.objectIdField];return h(a.layer.parsedUrl.path+
"/"+f+"/updateAttachment",{body:d,query:l({f:"json"},a.layer.parsedUrl.query,{attachmentId:c,token:a.layer.token}),responseType:"json"}).then(function(b){return a._createFeatureEditResult(b.data.updateAttachmentResult)}).catch(function(b){return m.reject(a._createAttachmentErrorResult(f,b))})})};a.prototype.applyEdits=function(b){var c=this;return this.load().then(function(){var d=b.addFeatures.map(c._serializeFeature,c),a=b.updateFeatures.map(c._serializeFeature,c),f=c._getFeatureIds(b.deleteFeatures),
d={f:"json",adds:d.length?JSON.stringify(d):null,updates:a.length?JSON.stringify(a):null,deletes:f.length?f.join(","):null};return h(c.layer.parsedUrl.path+"/applyEdits",{query:d,method:"post",responseType:"json"})}).then(function(b){return c._createEditsResult(b)})};a.prototype.deleteAttachments=function(b,c){var a=this;return this.load().then(function(){var d=b.attributes[a.layer.objectIdField];return h(a.layer.parsedUrl.path+"/"+d+"/deleteAttachments",{query:l({f:"json"},a.layer.parsedUrl.query,
{token:a.layer.token,attachmentIds:c.join(",")}),method:"post",responseType:"json"}).then(function(b){return b.data.deleteAttachmentResults.map(a._createFeatureEditResult)}).catch(function(b){return m.reject(a._createAttachmentErrorResult(d,b))})})};a.prototype.queryAttachments=function(b){var c=this,a=this.layer,e=a.token,f=a.parsedUrl,g=f.path;return this.load().then(function(){var a={query:l({},f.query,{f:"json",token:e}),responseType:"json"};if(!c.layer.get("capabilities.operations.supportsQueryAttachments")){for(var d=
b.objectIds,k=[],n=0;n<d.length;n++)k.push(h(g+"/"+d[n]+"/attachments",a));return m.all(k).then(function(b){return d.map(function(c,a){return{parentObjectId:c,attachmentInfos:b[a].data.attachmentInfos}})}).then(function(b){return y.processAttachmentQueryResult(b,g,e)})}return c.queryTask.executeAttachmentQuery(b,a)})};a.prototype.queryFeatures=function(b,c){var a=this;return this.load().then(function(){return a.queryTask.execute(b,c)})};a.prototype.queryFeaturesJSON=function(b,c){var a=this;return this.load().then(function(){return a.queryTask.executeJSON(b,
c)})};a.prototype.queryObjectIds=function(b,a){var c=this;return this.load().then(function(){return c.queryTask.executeForIds(b,a)})};a.prototype.queryFeatureCount=function(b,a){var c=this;return this.load().then(function(){return c.queryTask.executeForCount(b,a)})};a.prototype.queryExtent=function(b,a){var c=this;return this.load().then(function(){return c.queryTask.executeForExtent(b,a)})};a.prototype.queryRelatedFeatures=function(b){var a=this;return this.load().then(function(){return a.queryTask.executeRelationshipQuery(b)})};
a.prototype._fetchService=function(){var b=this,a=this.layer.resourceInfo;return a?(this.layerDefinition=a,m.resolve()):h(this.layer.parsedUrl.path,{query:l({f:"json"},this.layer.parsedUrl.query),responseType:"json"}).then(function(a){b.layerDefinition=a.data})};a.prototype._serializeFeature=function(b){var a=b.geometry;b=b.attributes;return a?"mesh"===a.type||"extent"===a.type?null:{geometry:a.toJSON(),attributes:b}:{attributes:b}};a.prototype._getFeatureIds=function(b){var a=b[0];return a?"objectId"in
a?this._getIdsFromFeatureIdentifier(b):this._getIdsFromFeatures(b):[]};a.prototype._getIdsFromFeatures=function(b){var a=this.layer.objectIdField;return b.map(function(b){return b.attributes&&b.attributes[a]})};a.prototype._getIdsFromFeatureIdentifier=function(b){return b.map(function(b){return b.objectId})};a.prototype._createEditsResult=function(b){b=b.data;return{addFeatureResults:b.addResults?b.addResults.map(this._createFeatureEditResult,this):[],updateFeatureResults:b.updateResults?b.updateResults.map(this._createFeatureEditResult,
this):[],deleteFeatureResults:b.deleteResults?b.deleteResults.map(this._createFeatureEditResult,this):[]}};a.prototype._createFeatureEditResult=function(b){var a=!0===b.success?null:b.error||{code:void 0,description:void 0};return{objectId:b.objectId,globalId:b.globalId,error:a?new r("feature-layer-source:edit-failure",a.description,{code:a.code}):null}};a.prototype._createAttachmentErrorResult=function(a,c){return{objectId:a,globalId:null,error:new r("feature-layer-source:attachment-failure",c.details.messages&&
c.details.messages[0]||c.message,{code:c.details.httpStatus||c.details.messageCode})}};g([e.property()],a.prototype,"type",void 0);g([e.property({constructOnly:!0})],a.prototype,"layer",void 0);g([e.property({readOnly:!0,dependsOn:["layer.parsedUrl","layer.gdbVersion","layer.dynamicDataSource"]})],a.prototype,"queryTask",null);return a=g([e.subclass("esri.layers.graphics.sources.FeatureLayerSource")],a)}(e.declared(v,w));q.default=p});