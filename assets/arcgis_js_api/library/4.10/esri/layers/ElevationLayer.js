// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.10/esri/copyright.txt for details.
//>>built
define("require exports ../core/tsSupport/assignHelper ../core/tsSupport/declareExtendsHelper ../core/tsSupport/decorateHelper dojo/io-query dojo/_base/kernel ../request ../core/Error ../core/promiseUtils ../core/accessorSupport/decorators ../geometry/HeightModelInfo ./Layer ./mixins/ArcGISCachedService ./mixins/OperationalLayer ./mixins/PortalLayer ./support/commonProperties ./support/ElevationQuery ./support/rasterFormats/LercCodec".split(" "),function(p,A,g,q,c,r,h,k,l,f,d,t,u,v,w,x,y,m,z){return function(n){function b(a){a=
n.call(this)||this;a.copyright=null;a.heightModelInfo=null;a.opacity=1;a.operationalLayerType="ArcGISTiledElevationServiceLayer";a.type="elevation";a.url=null;return a}q(b,n);b.prototype.normalizeCtorArgs=function(a,b){return"string"===typeof a?g({url:a},b):a};Object.defineProperty(b.prototype,"minScale",{get:function(){},set:function(a){this.constructed&&h.deprecated(this.declaredClass+".minScale support has been removed.","","4.5")},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,
"maxScale",{get:function(){},set:function(a){this.constructed&&h.deprecated(this.declaredClass+".maxScale support has been removed.","","4.5")},enumerable:!0,configurable:!0});b.prototype.load=function(){var a=this;this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:function(a){for(var b=0;b<a.typeKeywords.length;b++)if("elevation 3d layer"===a.typeKeywords[b].toLowerCase())return!0;throw new l("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",
{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"});}}).then(function(){return a._fetchImageService()},function(){return a._fetchImageService()}));return this.when()};b.prototype.fetchTile=function(a,b,d,c){var e=this;void 0===c&&(c=0);return this.load().then(function(){return e._fetchTileAvailability(a,b,d)}).then(function(){return k(e.getTileUrl(a,b,d),{responseType:"array-buffer"})}).then(function(a){a=z.decode(a.data,{noDataValue:c,returnFileInfo:!0});return{values:a.pixelData,
width:a.width,height:a.height,maxZError:a.fileInfo.maxZError,noDataValue:a.noDataValue}})};b.prototype.getTileUrl=function(a,b,c){var e=r.objectToQuery(g({},this.parsedUrl.query,{blankTile:!this.tilemapCache&&this.supportsBlankTile?!1:null}));return this.parsedUrl.path+"/tile/"+a+"/"+b+"/"+c+(e?"?"+e:"")};b.prototype.queryElevation=function(a,b){return(new m.ElevationQuery).query(this,a,b)};b.prototype.createElevationSampler=function(a,b){return(new m.ElevationQuery).createSampler(this,a,b)};b.prototype.importLayerViewModule=
function(a){switch(a.type){case "2d":return f.reject(new l("elevation-layer:view-not-supported","ElevationLayer is only supported in 3D"));case "3d":return f.create(function(a){return p(["../views/3d/layers/ElevationLayerView3D"],a)})}};b.prototype._fetchTileAvailability=function(a,b,c){return this.tilemapCache?this.tilemapCache.fetchAvailability(a,b,c):f.resolve("unknown")};b.prototype._fetchImageService=function(){var a=this;return f.resolve().then(function(){if(a.resourceInfo)return a.resourceInfo;
var b={query:g({f:"json"},a.parsedUrl.query),responseType:"json"};return k(a.parsedUrl.path,b)}).then(function(b){b.ssl&&(a.url=a.url.replace(/^http:/i,"https:"));a.read(b.data,{origin:"service",url:a.parsedUrl})})};c([d.property({json:{read:{source:"copyrightText"}}})],b.prototype,"copyright",void 0);c([d.property({readOnly:!0,type:t})],b.prototype,"heightModelInfo",void 0);c([d.property({json:{read:!1,write:!1}})],b.prototype,"minScale",null);c([d.property({json:{read:!1,write:!1}})],b.prototype,
"maxScale",null);c([d.property({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],b.prototype,"opacity",void 0);c([d.property({type:["ArcGISTiledElevationServiceLayer"]})],b.prototype,"operationalLayerType",void 0);c([d.property()],b.prototype,"resourceInfo",void 0);c([d.property({json:{read:!1},value:"elevation",readOnly:!0})],b.prototype,"type",void 0);c([d.property(y.url)],b.prototype,"url",void 0);return b=c([d.subclass("esri.layers.ElevationLayer")],b)}(d.declared(u,v,w,
x))});